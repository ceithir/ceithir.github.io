{"version":3,"sources":["features/navigation/reducer.js","characters.js","features/characters/Profile.js","features/characters/CharacterHeader.js","features/navigation/Section.js","features/party/reducer.js","features/design/ColumnsList.js","features/party/PartySelector.js","features/forest/directions.js","features/forest/reducer.js","features/forest/ForestSelector.js","features/debrief/Results.js","features/forest/Forest.js","features/library/books.js","features/library/reducer.js","features/library/BookSelector.js","features/city/locations.js","features/city/reducer.js","features/library/Library.js","features/city/CitySelector.js","features/city/City.js","features/debrief/EndingSection.js","features/debrief/Debrief.js","Game.js","Settings.js","About.js","App.js","app/store.js","i18n.js","index.js"],"names":["initialState","chapter","section","subsection","instantText","step","fadingOut","slice","createSlice","name","reducers","setSection","state","action","payload","nextSubSection","toggleInstantText","setChapter","nextStep","setFadingOut","actions","selectSection","navigation","selectSubSection","selectInstantText","selectChapter","selectStep","selectFadingOut","DEJANIRE","MAHARAL","RASHOMON","CETO","ALECTO","CAROLE","KATRINA","TEKELI","CAMILLA","character","t","Title","Typography","Link","standardizedAnswers","freeTextAnswers","profiles","nature","humanoid","species","impetus","bookishness","orderedKeys","FakeLink","children","useTranslation","title","trigger","disabled","FakeName","className","dataSource","i18n","profile","map","key","includes","description","exists","find","filter","Fragment","Trans","i18nKey","values","Boolean","Profile","level","renderItem","Item","Meta","Text","CharacterHeader","useState","showRecord","setShowRecord","strong","shape","size","onClick","placement","visible","onClose","width","Paragraph","FadeInAndScrollTo","useSelector","useEffect","window","scrollTo","top","document","body","scrollHeight","behavior","Animate","transitionName","transitionAppear","SubSection","text","split","paragraph","index","toString","dangerouslySetInnerHTML","__html","sanitizeHtml","ContinueButton","React","forwardRef","ref","buttonRef","useRef","useImperativeHandle","click","current","focus","refDefined","e","preventDefault","stopPropagation","SubSections","subsections","length","Controls","AnimationBlock","AnimationContainer","animationId","fadeOutBeforeAction","scrollUpOnAppear","transitionEnter","transitionLeave","showProp","onEnd","_","RawSection","canClickOnWholeCard","hideButton","continueRef","dispatch","useDispatch","setVisible","actualAction","data-character","hoverable","Heading","Section","next","translated","hideLastButton","heading","subSectionIndex","substring","language","translatedText","showAll","visibleSubsections","forest","library","city","addToParty","location","push","selectParty","party","ColumnsList","props","grid","gutter","column","xs","PartyCard","arr","len","fill","full","data-location","blur","bordered","concat","Array","LocationCard","PartySelector","WEST","DIRECTIONS","success","assignations","total","score","sendTo","direction","forEach","rearrangedDirections","ForestRoseWind","Group","onChange","event","target","value","Button","ForestSelector","characters","Results","context","data","tplus","params","conclusion","type","footer","Forest","goTo","stepUp","forestParty","adventures","tree","Object","keys","returnObjects","defaultValue","join","fallbackKey","completed","every","introduction","parts","MIMIC","ROMANCE","COFFEE","SCIENCE","BOOKS","SLOW","GOOD","slots","quality","assistants","Error","otherAssistant","max","fromEntries","assistSlots","mimicUnveiled","ghostFound","book","testimonyFound","result","s","baseScore","mod","reduce","acc","Math","char","unusedSlots","coffeePenalty","assignList","books","QualityEvaluation","version","BookCheckList","currentlyAssigned","maxedOut","options","label","BookSelector","POOR","OLD","LOCATIONS","demonFound","assign","forceAssign","Library","defaultParams","qualities","poisoned","orderedBooks","poisonedCharacter","list","remainder","results","chara","attentiveness","att","done","sort","CityButtons","places","CitySelector","adventure","compose","City","noAccess","assignCount","Panel","Collapse","ENDINGS","Hints","forestSuccess","librarySuccess","citySuccess","EndingSection","entitiesFound","ending","findIndex","end","header","reload","Debrief","libraryParty","cityParty","forestSuccessFunc","librarySuccessFunc","citySuccessFunc","tekeliSpecial","alectoSpecial","base","Game","meetingOrder","i","indexOf","supportedLanguages","LanguageSelector","changeLanguage","toUpperCase","InstantTextToggler","checked","unCheckedChildren","checkedChildren","Settings","About","onCancel","App","configureStore","reducer","navigationReducer","partyReducer","forestReducer","libraryReducer","cityReducer","use","LanguageDetector","initReactI18next","init","ns","defaultNS","fallbackLng","interpolation","escapeValue","resources","en","all","fr","react","transKeepBasicHtmlNodesFor","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.b474dd96.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  chapter: null,\n  section: null,\n  subsection: 0,\n  instantText: false,\n  step: 0,\n  fadingOut: false,\n};\n\nconst slice = createSlice({\n  name: \"navigation\",\n  initialState,\n  reducers: {\n    setSection: (state, action) => {\n      state.section = action.payload;\n      state.subsection = initialState.subsection;\n      state.step = initialState.step;\n    },\n    nextSubSection: (state) => {\n      state.subsection++;\n    },\n    toggleInstantText: (state) => {\n      state.instantText = !state.instantText;\n    },\n    setChapter: (state, action) => {\n      state.chapter = action.payload;\n      state.section = initialState.section;\n      state.subsection = initialState.subsection;\n      state.step = initialState.step;\n    },\n    nextStep: (state) => {\n      state.step++;\n    },\n    setFadingOut: (state, action) => {\n      state.fadingOut = action.payload;\n    },\n  },\n});\n\nexport const {\n  setSection,\n  nextSubSection,\n  toggleInstantText,\n  setChapter,\n  nextStep,\n  setFadingOut,\n} = slice.actions;\nexport const selectSection = (state) => state.navigation.section;\nexport const selectSubSection = (state) => state.navigation.subsection;\nexport const selectInstantText = (state) => state.navigation.instantText;\nexport const selectChapter = (state) => state.navigation.chapter;\nexport const selectStep = (state) => state.navigation.step;\nexport const selectFadingOut = (state) => state.navigation.fadingOut;\n\nexport default slice.reducer;\n","export const DEJANIRE = \"dejanire\";\nexport const MAHARAL = \"maharal\";\nexport const RASHOMON = \"rashomon\";\nexport const CETO = \"ceto\";\nexport const ALECTO = \"alecto\";\nexport const CAROLE = \"carole\";\nexport const KATRINA = \"katrina\";\nexport const TEKELI = \"tekeli\";\nexport const CAMILLA = \"camilla\";\nexport const GUEST = \"???\";\n\nexport const name = ({ character, t }) => t(`characters.${character}.name`);\n","import React from \"react\";\nimport { Typography, List, Tooltip } from \"antd\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport {\n  RASHOMON,\n  CETO,\n  ALECTO,\n  CAROLE,\n  KATRINA,\n  TEKELI,\n  CAMILLA,\n  DEJANIRE,\n  MAHARAL,\n  name,\n} from \"../../characters\";\nimport \"./Profile.less\";\n\nconst { Title, Link } = Typography;\n\nconst standardizedAnswers = [\"nature\", \"humanoid\", \"impetus\", \"bookishness\"];\nconst freeTextAnswers = [\"of-note\", \"job\"];\n\nconst profiles = {\n  [RASHOMON]: {\n    nature: \"flesh\",\n    humanoid: \"class-2\",\n    species: [\"oni\"],\n    impetus: \"average\",\n    bookishness: \"low\",\n  },\n  [CETO]: {\n    nature: \"flesh\",\n    humanoid: \"class-3\",\n    species: [\"lamia\", \"gorgon\"],\n    impetus: \"average\",\n    bookishness: \"high\",\n  },\n  [ALECTO]: {\n    nature: \"flesh\",\n    humanoid: \"class-3\",\n    species: [\"harpy\"],\n    impetus: \"good\",\n    bookishness: \"medium\",\n  },\n  [CAROLE]: {\n    nature: \"mixed\",\n    humanoid: \"class-1\",\n    species: [\"catgirl\", \"cheshire\"],\n    impetus: \"degraded\",\n    bookishness: \"low\",\n  },\n  [KATRINA]: {\n    nature: \"half-fay\",\n    humanoid: \"class-1\",\n    species: [\"dullahan\"],\n    impetus: \"average\",\n    bookishness: \"medium\",\n  },\n  [TEKELI]: {\n    nature: \"mixed\",\n    humanoid: \"class-7\",\n    species: [\"slime\"],\n    impetus: \"good\",\n    bookishness: \"null\",\n  },\n  [CAMILLA]: {\n    nature: \"dream\",\n    humanoid: \"class-1\",\n    species: [\"mask\"],\n    impetus: \"good\",\n    bookishness: \"null\",\n  },\n  [DEJANIRE]: {\n    nature: \"flesh\",\n    humanoid: \"class-3\",\n    species: [\"centaur\"],\n    impetus: \"bad\",\n    bookishness: \"high\",\n  },\n  [MAHARAL]: {\n    nature: \"composite\",\n    humanoid: \"class-7\",\n    species: [\"elemental\", \"golem\"],\n    impetus: \"average\",\n    bookishness: \"high\",\n  },\n};\n\nconst orderedKeys = [\n  \"nature\",\n  \"job\",\n  \"humanoid\",\n  \"appearance\",\n  \"impetus\",\n  \"bookishness\",\n  \"of-note\",\n];\n\nconst FakeLink = ({ children }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Tooltip title={t(\"extras.profile.links.error\")} trigger=\"click\">\n      <Link disabled>{children}</Link>\n    </Tooltip>\n  );\n};\n\nconst FakeName = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Tooltip title={t(\"extras.profile.names.error\")} trigger=\"click\">\n      <span className=\"avh-censored-text\">XXXXXXX</span>\n    </Tooltip>\n  );\n};\n\nconst dataSource = ({ character, t, i18n }) => {\n  const profile = profiles[character];\n  if (!profile) {\n    return [];\n  }\n\n  return orderedKeys\n    .map((key) => {\n      if (standardizedAnswers.includes(key)) {\n        if (!profile[key]) {\n          return null;\n        }\n\n        return {\n          title: t(`extras.profile.${key}.title`),\n          description: t(`extras.profile.${key}.${profile[key]}`),\n        };\n      }\n\n      if (freeTextAnswers.includes(key)) {\n        if (!i18n.exists(`characters.${character}.profile.${key}`)) {\n          return null;\n        }\n\n        return {\n          title: t(`extras.profile.${key}.title`),\n          description: t(`characters.${character}.profile.${key}`),\n        };\n      }\n\n      if (key === \"appearance\") {\n        if (\n          !profile[\"species\"].find((species) =>\n            i18n.exists(`extras.profile.appearance.${species}`)\n          ) ||\n          !i18n.exists(`characters.${character}.profile.appearance`)\n        ) {\n          return false;\n        }\n\n        return {\n          title: t(`extras.profile.appearance.title`),\n          description: (\n            <>\n              {profile[\"species\"]\n                .filter((species) =>\n                  i18n.exists(`extras.profile.appearance.${species}`)\n                )\n                .map((species) => {\n                  return (\n                    <React.Fragment key={species}>\n                      {t(`extras.profile.appearance.${species}.features`)}{\" \"}\n                      <FakeLink>\n                        <Trans\n                          i18nKey={\"extras.profile.links.see_more\"}\n                          values={{\n                            species: t(\n                              `extras.profile.appearance.${species}.name`\n                            ),\n                          }}\n                        />\n                      </FakeLink>\n                      <br />\n                    </React.Fragment>\n                  );\n                })}\n              {t(`characters.${character}.profile.appearance`)}\n            </>\n          ),\n        };\n      }\n\n      return null;\n    })\n    .filter(Boolean);\n};\n\nconst Profile = ({ character }) => {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <div className=\"avh-character-profile\">\n      <Title level={3}>\n        {name({ t, character })} <FakeName />\n      </Title>\n      <List\n        dataSource={dataSource({ character, t, i18n })}\n        renderItem={({ title, description }) => (\n          <List.Item>\n            <List.Item.Meta title={title} description={description} />\n          </List.Item>\n        )}\n      />\n      <FakeLink>{t(\"extras.profile.links.see_all\")}</FakeLink>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport { Typography, Card, Button, Drawer } from \"antd\";\nimport \"./CharacterHeader.less\";\nimport { useTranslation } from \"react-i18next\";\nimport Profile from \"./Profile\";\nimport { name } from \"../../characters\";\n\nconst { Text } = Typography;\n\nconst CharacterHeader = ({ character }) => {\n  const [showRecord, setShowRecord] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <Card className=\"avh-character-header\">\n      <Text strong>{name({ t, character })}</Text>\n      <Button shape=\"circle\" size=\"small\" onClick={() => setShowRecord(true)}>\n        ?\n      </Button>\n      <Drawer\n        placement={\"left\"}\n        visible={showRecord}\n        onClose={() => setShowRecord(false)}\n        width={\"min(100%, 512px)\"}\n      >\n        <Profile character={character} />\n      </Drawer>\n    </Card>\n  );\n};\n\nexport default CharacterHeader;\n","import React, { useEffect, useRef, useImperativeHandle } from \"react\";\nimport sanitizeHtml from \"sanitize-html\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSubSection,\n  nextSubSection,\n  selectInstantText,\n  selectFadingOut,\n  setFadingOut,\n} from \"./reducer\";\nimport { Typography, Card, Button } from \"antd\";\nimport \"./Section.less\";\nimport Animate from \"rc-animate\";\nimport CharacterHeader from \"../characters/CharacterHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { name } from \"../../characters\";\n\nconst { Paragraph, Title } = Typography;\n\nconst FadeInAndScrollTo = ({ children }) => {\n  const instantText = useSelector(selectInstantText);\n\n  useEffect(() => {\n    if (instantText) {\n      return;\n    }\n    window.scrollTo({ top: document.body.scrollHeight, behavior: \"smooth\" });\n  }, [instantText]);\n\n  if (instantText) {\n    return <>{children}</>;\n  }\n\n  return (\n    <Animate transitionName=\"fade\" transitionAppear>\n      <div>{children}</div>\n    </Animate>\n  );\n};\n\nconst SubSection = ({ text }) => {\n  return (\n    <FadeInAndScrollTo>\n      <Paragraph>\n        {text.split(\"\\n\").map((paragraph, index) => {\n          return (\n            <p\n              key={index.toString()}\n              dangerouslySetInnerHTML={{ __html: sanitizeHtml(paragraph) }}\n            />\n          );\n        })}\n      </Paragraph>\n    </FadeInAndScrollTo>\n  );\n};\n\nconst ContinueButton = React.forwardRef(({ action }, ref) => {\n  const buttonRef = useRef();\n  useImperativeHandle(ref, () => ({\n    click: () => {\n      buttonRef.current.focus();\n      buttonRef.current.click();\n    },\n  }));\n  const refDefined = !!buttonRef.current;\n  const instantText = useSelector(selectInstantText);\n  useEffect(() => {\n    if (instantText) {\n      return;\n    }\n    buttonRef.current.focus();\n  }, [refDefined, instantText]);\n\n  return (\n    <Button\n      ref={buttonRef}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        action();\n      }}\n    >\n      {\">>>\"}\n    </Button>\n  );\n});\n\nconst SubSections = ({ subsections }) => {\n  if (!subsections.length) {\n    return null;\n  }\n\n  return (\n    <div className=\"avh-subsections\">\n      {subsections.map((text, index) => {\n        return <SubSection key={index.toString()} text={text} />;\n      })}\n    </div>\n  );\n};\n\nconst Controls = React.forwardRef(({ action }, ref) => {\n  return (\n    <div className=\"avh-controls\">\n      <ContinueButton ref={ref} action={action} />\n    </div>\n  );\n});\n\nconst AnimationBlock = ({ children }) => {\n  return <div>{children}</div>;\n};\n\nconst AnimationContainer = ({\n  children,\n  animationId,\n  visible,\n  action,\n  fadeOutBeforeAction,\n  scrollUpOnAppear,\n}) => {\n  useEffect(() => {\n    if (!animationId) {\n      return;\n    }\n    if (scrollUpOnAppear) {\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n    }\n  }, [animationId, scrollUpOnAppear]);\n\n  if (!animationId) {\n    return <>{children}</>;\n  }\n\n  return (\n    <Animate\n      transitionName=\"fade\"\n      transitionEnter={false}\n      transitionLeave={fadeOutBeforeAction}\n      showProp=\"visible\"\n      onEnd={(_, exists) => {\n        if (!exists) {\n          action();\n        }\n      }}\n    >\n      <AnimationBlock key={animationId} visible={visible}>\n        {children}\n      </AnimationBlock>\n    </Animate>\n  );\n};\n\nconst RawSection = ({\n  character,\n  canClickOnWholeCard,\n  animationId,\n  action,\n  fadeOutBeforeAction,\n  children,\n  hideButton,\n}) => {\n  const continueRef = useRef();\n  const dispatch = useDispatch();\n  const visible = !useSelector(selectFadingOut);\n  const setVisible = (visible) => dispatch(setFadingOut(!visible));\n  const startFadingOut = () => setVisible(false);\n  const endFadingOutAndContinue = () => {\n    setVisible(true);\n    action();\n  };\n  const actualAction = fadeOutBeforeAction ? startFadingOut : action;\n  const scrollUpOnAppear = animationId && !fadeOutBeforeAction; // FIXME: Arcane rule\n\n  return (\n    <div data-character={character}>\n      {character && <CharacterHeader character={character} />}\n      <Card\n        className=\"avh-section\"\n        hoverable={canClickOnWholeCard}\n        onClick={() => canClickOnWholeCard && continueRef.current.click()}\n      >\n        <AnimationContainer\n          animationId={animationId}\n          visible={visible}\n          action={endFadingOutAndContinue}\n          fadeOutBeforeAction={fadeOutBeforeAction}\n          scrollUpOnAppear={scrollUpOnAppear}\n        >\n          {children}\n        </AnimationContainer>\n        {!!action && !hideButton && (\n          <Controls ref={continueRef} action={actualAction} />\n        )}\n      </Card>\n    </div>\n  );\n};\n\nconst Heading = ({ text }) => {\n  return (\n    <Title level={5} className=\"avh-section-heading\">\n      {text}\n    </Title>\n  );\n};\n\nconst Section = ({\n  text,\n  children,\n  next,\n  character,\n  translated = false,\n  hideLastButton = false,\n  heading,\n}) => {\n  const subSectionIndex = useSelector(selectSubSection);\n  const dispatch = useDispatch();\n  const instantText = useSelector(selectInstantText);\n  const { t, i18n } = useTranslation();\n\n  const animationId = (() => {\n    if (!text) {\n      return null;\n    }\n    if (translated) {\n      return text.substring(0, 32);\n    }\n    return `${i18n.language}.${text}`;\n  })();\n\n  const translatedText = (() => {\n    if (!text) {\n      return null;\n    }\n    if (translated) {\n      return text;\n    }\n    return t(text, { name: name({ t, character }) });\n  })();\n  const subsections = translatedText?.split(/\\n{2,}/) || [];\n  const showAll = (() => {\n    if (!text) {\n      return true;\n    }\n    if (instantText) {\n      return true;\n    }\n    if (children) {\n      return subSectionIndex >= subsections.length;\n    }\n    return subSectionIndex >= subsections.length - 1;\n  })();\n  const visibleSubsections = (() => {\n    if (showAll) {\n      return subsections;\n    }\n    return subsections.filter((_, index) => index <= subSectionIndex);\n  })();\n  const action = (() => {\n    if (showAll) {\n      return next;\n    }\n    return () => dispatch(nextSubSection());\n  })();\n  const canClickOnWholeCard = !!action && (!showAll || !children);\n\n  return (\n    <RawSection\n      character={character}\n      canClickOnWholeCard={canClickOnWholeCard}\n      animationId={animationId}\n      action={action}\n      fadeOutBeforeAction={!instantText && showAll && animationId && next}\n      hideButton={showAll && hideLastButton}\n    >\n      {heading && <Heading text={heading} />}\n      <SubSections subsections={visibleSubsections} />\n      {showAll && <FadeInAndScrollTo>{children}</FadeInAndScrollTo>}\n    </RawSection>\n  );\n};\n\nexport default Section;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { DEJANIRE, MAHARAL, RASHOMON } from \"../../characters\";\n\nconst slice = createSlice({\n  name: \"party\",\n  initialState: {\n    forest: [DEJANIRE],\n    library: [MAHARAL],\n    city: [RASHOMON],\n  },\n  reducers: {\n    addToParty: (state, action) => {\n      const { character, location } = action.payload;\n      state[location].push(character);\n    },\n  },\n});\n\nexport const { addToParty } = slice.actions;\nexport const selectParty = (location) => (state) => state.party[location];\n\nexport default slice.reducer;\n","import React from \"react\";\nimport { List } from \"antd\";\n\nconst ColumnsList = ({ dataSource, ...props }) => {\n  return (\n    <List\n      grid={{\n        gutter: 16,\n        column: dataSource.length,\n        xs: 1,\n      }}\n      dataSource={dataSource}\n      {...props}\n    />\n  );\n};\n\nexport default ColumnsList;\n","import React, { useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectParty, addToParty } from \"./reducer\";\nimport { Typography, Card, List, Button } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./PartySelector.less\";\nimport { name } from \"../../characters\";\nimport ColumnsList from \"../design/ColumnsList\";\n\nconst { Text } = Typography;\n\nconst pad = (arr, len, fill) => arr.concat(Array(len).fill(fill)).slice(0, len);\n\nconst PartyCard = ({ party, location, full, onClick }) => {\n  const { t } = useTranslation();\n  const buttonRef = useRef();\n\n  return (\n    <Card\n      data-location={location}\n      title={t(`locations.${location}.title`)}\n      hoverable={!full}\n      onClick={() => {\n        buttonRef.current.blur();\n        onClick();\n      }}\n    >\n      <List\n        bordered={!full}\n        dataSource={pad(party, 3, \"placeholder\")}\n        renderItem={(character) => (\n          <List.Item>\n            <Text>{name({ t, character })}</Text>\n          </List.Item>\n        )}\n      />\n      <Button ref={buttonRef} disabled={full}>\n        {\"+\"}\n      </Button>\n    </Card>\n  );\n};\n\nconst LocationCard = ({ location, character, next }) => {\n  const party = useSelector(selectParty(location));\n  const dispatch = useDispatch();\n\n  const full = party.length >= 3;\n  const onClick = () => {\n    if (full) {\n      return;\n    }\n    dispatch(addToParty({ character, location }));\n    next();\n  };\n\n  return (\n    <PartyCard\n      party={party}\n      location={location}\n      full={full}\n      onClick={onClick}\n    />\n  );\n};\n\nconst PartySelector = ({ character, next }) => {\n  const locations = [\"forest\", \"library\", \"city\"];\n\n  return (\n    <ColumnsList\n      className=\"avh-party-selector\"\n      dataSource={locations}\n      renderItem={(location) => (\n        <List.Item key={location}>\n          <LocationCard\n            key={location}\n            location={location}\n            character={character}\n            next={next}\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default PartySelector;\n","import {\n  DEJANIRE,\n  ALECTO,\n  CAMILLA,\n  CAROLE,\n  CETO,\n  KATRINA,\n  TEKELI,\n} from \"../../characters\";\n\nexport const NORTH = \"north\";\nexport const SOUTH = \"south\";\nexport const WEST = \"west\";\nexport const EAST = \"east\";\n\nexport const DIRECTIONS = [NORTH, EAST, SOUTH, WEST];\n\nexport const score = (assignations) => {\n  let total = 0;\n\n  switch (assignations[NORTH]) {\n    case ALECTO:\n    case CAROLE:\n      total += 1;\n      break;\n    case CAMILLA:\n    case KATRINA:\n      total += 2;\n      break;\n    case CETO:\n    case DEJANIRE:\n      total += 3;\n      break;\n    case TEKELI:\n      total += 4;\n      break;\n    default:\n      break;\n  }\n\n  switch (assignations[SOUTH]) {\n    case ALECTO:\n      total += 1;\n      break;\n    case DEJANIRE:\n    case KATRINA:\n      total += 2;\n      break;\n    case CETO:\n      total += 3;\n      break;\n    case CAMILLA:\n    case TEKELI:\n      total += 4;\n      break;\n    default:\n      break;\n  }\n\n  switch (assignations[WEST]) {\n    case TEKELI:\n    case CAROLE:\n      total += 1;\n      break;\n    case CETO:\n    case DEJANIRE:\n      total += 3;\n      break;\n    default:\n      break;\n  }\n\n  switch (assignations[EAST]) {\n    case ALECTO:\n      total += 1;\n      break;\n    case CAMILLA:\n      total += 2;\n      break;\n    case CETO:\n    case DEJANIRE:\n    case KATRINA:\n    case CAROLE:\n      total += 3;\n      break;\n    case TEKELI:\n      total += 4;\n      break;\n    default:\n      break;\n  }\n\n  return total;\n};\n\nexport const divineFound = (assignations) => {\n  return [DEJANIRE, CAMILLA].includes(assignations[SOUTH]);\n};\n\nexport const success = (assignations) => score(assignations) >= 7;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { DIRECTIONS } from \"./directions\";\n\nconst slice = createSlice({\n  name: \"forest\",\n  initialState: {},\n  reducers: {\n    sendTo: (state, action) => {\n      const { character, direction } = action.payload;\n      DIRECTIONS.forEach((direction) => {\n        if (state[direction] === character) {\n          state[direction] = null;\n        }\n      });\n      state[direction] = character;\n    },\n  },\n});\n\nexport const { sendTo } = slice.actions;\nexport const selectForest = () => (state) => state.forest;\n\nexport default slice.reducer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectForest, sendTo } from \"./reducer\";\nimport { Card, Radio, List, Typography } from \"antd\";\nimport { CAROLE, name } from \"../../characters\";\nimport \"./ForestSelector.less\";\nimport { useTranslation } from \"react-i18next\";\nimport { DIRECTIONS, SOUTH, NORTH, WEST, EAST } from \"./directions\";\nimport ColumnsList from \"../design/ColumnsList\";\n\nconst { Text } = Typography;\n\nconst rearrangedDirections = [NORTH, WEST, EAST, SOUTH];\n\nconst ForestRoseWind = ({ character }) => {\n  const forest = useSelector(selectForest());\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <Text strong>{name({ t, character })}</Text>\n      <Radio.Group\n        onChange={(event) => {\n          dispatch(sendTo({ character, direction: event.target.value }));\n        }}\n        value={DIRECTIONS.find((direction) => forest[direction] === character)}\n      >\n        {rearrangedDirections.map((direction) => {\n          const disabled = (() => {\n            if (character === CAROLE && direction === SOUTH) {\n              return true;\n            }\n            return !!forest[direction] && forest[direction] !== character;\n          })();\n\n          return (\n            <Radio.Button key={direction} value={direction} disabled={disabled}>\n              {t(`locations.forest.directions.${direction}`)}\n            </Radio.Button>\n          );\n        })}\n      </Radio.Group>\n    </Card>\n  );\n};\n\nconst ForestSelector = ({ characters }) => {\n  return (\n    <ColumnsList\n      className=\"avh-forest-selector\"\n      dataSource={characters}\n      renderItem={(character) => (\n        <List.Item key={character}>\n          <ForestRoseWind key={character} character={character} />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default ForestSelector;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Typography, List } from \"antd\";\nimport { name } from \"../../characters\";\n\nconst { Text, Title } = Typography;\n\nconst Results = ({ context, success, data }) => {\n  const { t } = useTranslation();\n  const tplus = (key, params) => t(`extras.results.${context}.${key}`, params);\n\n  const conclusion = success ? (\n    <Text strong type=\"success\">\n      {tplus(\"good\")}\n    </Text>\n  ) : (\n    <Text strong type=\"warning\">\n      {tplus(\"bad\")}\n    </Text>\n  );\n\n  return (\n    <div className=\"avh-chapter-results\">\n      <Title level={3}>{t(\"extras.results.title\")}</Title>\n      <List\n        footer={conclusion}\n        dataSource={data}\n        renderItem={({ key, character, type }) => (\n          <List.Item>\n            <Text type={type}>\n              {tplus(key, { name: name({ character, t }) })}\n            </Text>\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default Results;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSection,\n  setSection,\n  selectStep,\n  nextStep,\n  setChapter,\n} from \"../navigation/reducer\";\nimport { useTranslation } from \"react-i18next\";\nimport Section from \"../navigation/Section\";\nimport {\n  CETO,\n  CAROLE,\n  CAMILLA,\n  ALECTO,\n  KATRINA,\n  DEJANIRE,\n  name,\n  TEKELI,\n} from \"../../characters\";\nimport { selectParty } from \"../party/reducer\";\nimport ForestSelector from \"./ForestSelector\";\nimport { selectForest } from \"./reducer\";\nimport { Typography } from \"antd\";\nimport { DIRECTIONS, WEST, success, EAST, SOUTH } from \"./directions\";\nimport Results from \"../debrief/Results\";\n\nconst { Paragraph } = Typography;\n\nconst Forest = () => {\n  const section = useSelector(selectSection);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const goTo = (section) => () => dispatch(setSection(section));\n  const stepUp = () => dispatch(nextStep());\n  const forestParty = useSelector(selectParty(\"forest\"));\n  const forest = useSelector(selectForest());\n  const step = useSelector(selectStep);\n\n  const PLANNING = \"planning\";\n  const EXPLORATION = \"exploration\";\n  const RESULTS = \"results\";\n\n  if (section === RESULTS) {\n    const data = [\n      forestParty.includes(CETO) && {\n        key: \"optigirl\",\n        character: CETO,\n        type: \"success\",\n      },\n      forestParty.includes(TEKELI) &&\n        forest[WEST] !== TEKELI && {\n          key: \"optigirl\",\n          character: TEKELI,\n          type: \"success\",\n        },\n      [ALECTO, CAMILLA, KATRINA].includes(forest[WEST]) && {\n        key: \"beast\",\n        character: forest[WEST],\n        type: \"warning\",\n      },\n      forestParty.includes(ALECTO) &&\n        forest[WEST] !== ALECTO && {\n          key: \"citygirl\",\n          character: ALECTO,\n          type: \"warning\",\n        },\n      forestParty.includes(CAROLE) &&\n        forest[EAST] !== CAROLE && {\n          key: \"citygirl\",\n          character: CAROLE,\n          type: \"warning\",\n        },\n      [CAROLE, KATRINA].includes(forest[EAST]) && {\n        key: \"fairies\",\n        character: forest[EAST],\n        type: \"success\",\n      },\n      forestParty.includes(CETO) && {\n        key: \"dream\",\n      },\n      [CAMILLA, DEJANIRE].includes(forest[SOUTH]) && {\n        key: `ally.${forest[SOUTH]}`,\n      },\n    ].filter(Boolean);\n\n    return (\n      <Section next={() => dispatch(setChapter(\"library\"))}>\n        <Results context=\"forest\" success={success(forest)} data={data} />\n      </Section>\n    );\n  }\n\n  if (section === EXPLORATION) {\n    const root = \"story.forest.exploration\";\n\n    const adventures = DIRECTIONS.map((direction) => {\n      const character = forest[direction];\n      if (!character) {\n        return \"\";\n      }\n      const text = (() => {\n        if (\n          direction === WEST &&\n          [ALECTO, CAMILLA, KATRINA].includes(character)\n        ) {\n          const tree = `${root}.monster`;\n\n          return Object.keys(t(tree, { returnObjects: true }))\n            .map((index) => {\n              return t(`${tree}.${index}.${character}`, {\n                defaultValue: t(`${tree}.${index}.default`),\n              });\n            })\n            .join(\"\\n\\n\");\n        }\n\n        const key = `story.forest.exploration.${character}.${direction}`;\n        const fallbackKey = `story.forest.exploration.${character}.default`;\n        return t(key, {\n          defaultValue: t(fallbackKey, { name: name({ character, t }) }),\n        });\n      })();\n\n      return { character, text, direction };\n    }).filter(Boolean);\n    return (\n      <Section\n        text={adventures[step][\"text\"]}\n        character={adventures[step][\"character\"]}\n        next={!!adventures[step + 1] ? stepUp : goTo(RESULTS)}\n        translated={true}\n        heading={`${t(`locations.forest.name`)} – ${t(\n          `locations.forest.directions.${adventures[step][\"direction\"]}`\n        )}`}\n      />\n    );\n  }\n\n  if (section === PLANNING) {\n    const completed = forestParty.every((character) =>\n      Object.values(forest).includes(character)\n    );\n\n    return (\n      <Section\n        text={\"story.forest.planning\"}\n        next={completed && goTo(EXPLORATION)}\n      >\n        <ForestSelector characters={forestParty} />\n        {completed && (\n          <Paragraph>\n            <p>{t(\"story.forest.split\")}</p>\n          </Paragraph>\n        )}\n      </Section>\n    );\n  }\n\n  const introduction = (() => {\n    let parts = [{ key: \"part-1\", character: DEJANIRE }];\n\n    if (forestParty.includes(CETO)) {\n      parts.push({ key: \"ceto\", character: CETO });\n    }\n\n    parts.push({ key: \"part-2\", character: DEJANIRE });\n\n    if (forestParty.includes(CAMILLA)) {\n      parts.push({ key: \"camilla\", character: CAMILLA });\n    }\n\n    parts.push({ key: \"part-3\", character: DEJANIRE });\n\n    if (forestParty.includes(CAROLE)) {\n      parts.push({ key: \"carole\", character: CAROLE });\n    }\n\n    return parts;\n  })();\n  const current = introduction[step];\n\n  return (\n    <Section\n      text={`story.forest.introduction.${current[\"key\"]}`}\n      character={current[\"character\"]}\n      next={!!introduction[step + 1] ? stepUp : goTo(PLANNING)}\n    />\n  );\n};\n\nexport default Forest;\n","import {\n  CAMILLA,\n  TEKELI,\n  MAHARAL,\n  CETO,\n  KATRINA,\n  ALECTO,\n} from \"../../characters\";\n\nexport const MYSTERY = \"mystery\";\nexport const FANTASY = \"fantasy\";\nexport const MIMIC = \"mimic\";\nexport const ROMANCE = \"romance\";\nexport const COFFEE = \"coffee\";\nexport const SCIENCE = \"science\";\n\nexport const BOOKS = [MYSTERY, FANTASY, MIMIC, ROMANCE, COFFEE, SCIENCE];\n\nconst SLOW = [CAMILLA, TEKELI];\n\nexport const GOOD = \"good\";\nexport const AVERAGE = \"average\";\nexport const BAD = \"bad\";\n\nconst assistSlots = (assistants) => {\n  if (assistants.length !== 2) {\n    throw new Error(\"Groups of three only please\");\n  }\n\n  if (assistants.includes(CETO)) {\n    const otherAssistant = assistants.find((character) => character !== CETO);\n\n    return {\n      [CETO]: {\n        quality: GOOD,\n        max: 3,\n      },\n      [otherAssistant]: {\n        quality: GOOD,\n        max: SLOW.includes(otherAssistant) ? 1 : 2,\n      },\n    };\n  }\n\n  return Object.fromEntries(\n    assistants.map((character) => {\n      return [\n        character,\n        {\n          quality: SLOW.includes(character) ? AVERAGE : GOOD,\n          max: 2,\n        },\n      ];\n    })\n  );\n};\n\nexport const slots = (characters) => {\n  return {\n    [MAHARAL]: {\n      quality: BAD,\n    },\n    ...assistSlots(characters.filter((character) => character !== MAHARAL)),\n  };\n};\n\nexport const score = ({ characters, assignations }) => {\n  let result = 0;\n\n  const s = slots(characters);\n  const quality = (book) => s[assignations[book]][\"quality\"];\n\n  const unusedSlots = (quality) =>\n    characters.reduce((acc, character) => {\n      if (s[character][\"quality\"] !== quality) {\n        return acc;\n      }\n      return (\n        acc +\n        Math.max(\n          0,\n          s[character][\"max\"] -\n            Object.values(assignations).filter((char) => char === character)\n              .length\n        )\n      );\n    }, 0);\n\n  const baseScore = (book, mod = 0) => {\n    switch (quality(book)) {\n      case GOOD:\n        return 2 + mod;\n      case AVERAGE:\n        return 1 + mod;\n      default:\n        return 0;\n    }\n  };\n\n  result += unusedSlots(GOOD) * 1; // Leftover bonus\n\n  result += baseScore(MYSTERY, 1);\n  result += baseScore(FANTASY);\n\n  const coffeePenalty = [ALECTO, CETO].includes(assignations[COFFEE]) ? 0 : -1;\n  result += baseScore(COFFEE, coffeePenalty);\n\n  if (assignations[MIMIC] === TEKELI) {\n    result += 1;\n  }\n\n  result += assignations[ROMANCE] === KATRINA ? 3 : baseScore(ROMANCE);\n\n  if (testimonyFound({ characters, assignations })) {\n    result += 3;\n  }\n\n  return result;\n};\n\nexport const mimicUnveiled = (assignations) =>\n  !!assignations[MIMIC] && ![MAHARAL, CAMILLA].includes(assignations[MIMIC]);\n\nexport const ghostFound = (assignations) =>\n  [KATRINA, CETO].includes(assignations[ROMANCE]);\n\nexport const quality = ({ book, characters, assignations }) =>\n  slots(characters)[assignations[book]][\"quality\"];\n\nexport const testimonyFound = ({ characters, assignations }) => {\n  if (assignations[SCIENCE] === CAMILLA) {\n    return false;\n  }\n  return quality({ book: SCIENCE, characters, assignations }) === GOOD;\n};\n\nexport const success = ({ characters, assignations }) =>\n  mimicUnveiled(assignations) && score({ characters, assignations }) >= 8;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { BOOKS } from \"./books\";\n\nconst slice = createSlice({\n  name: \"library\",\n  initialState: {},\n  reducers: {\n    assignList: (state, action) => {\n      const { character, books } = action.payload;\n      BOOKS.forEach((book) => {\n        if (state[book] === character) {\n          state[book] = null;\n        }\n      });\n      books.forEach((book) => {\n        state[book] = character;\n      });\n    },\n  },\n});\n\nexport const { assignList } = slice.actions;\nexport const selectLibrary = () => (state) => state.library;\n\nexport default slice.reducer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectLibrary, assignList } from \"./reducer\";\nimport { Card, List, Checkbox, Typography, Tooltip } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { BOOKS, slots, GOOD, BAD } from \"./books\";\nimport { name } from \"../../characters\";\nimport ColumnsList from \"../design/ColumnsList\";\n\nconst { Text, Paragraph } = Typography;\n\nconst QualityEvaluation = ({ quality, character }) => {\n  const { t } = useTranslation();\n  const text = (version) =>\n    t(`locations.library.quality.${quality}.${version}`, {\n      name: name({ t, character }),\n    });\n\n  const type =\n    quality === GOOD ? \"success\" : quality === BAD ? \"warning\" : \"average\";\n\n  return (\n    <Tooltip placement=\"top\" title={text(\"long\")}>\n      <Paragraph type={type}>{text(\"short\")}</Paragraph>\n    </Tooltip>\n  );\n};\n\nconst BookCheckList = ({ character, quality, max }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const library = useSelector(selectLibrary());\n\n  const currentlyAssigned = Object.keys(library).filter(\n    (book) => library[book] === character\n  );\n  const maxedOut = max && currentlyAssigned.length >= max;\n  const options = BOOKS.map((book) => {\n    const disabled = (() => {\n      if (library[book] === character) {\n        return false;\n      }\n      return maxedOut || library[book];\n    })();\n\n    return {\n      value: book,\n      label: t(`locations.library.books.${book}`),\n      disabled,\n    };\n  });\n  const onChange = (books) => {\n    dispatch(assignList({ character, books }));\n  };\n\n  return (\n    <Card>\n      <Text strong>{name({ t, character })}</Text>\n      {max && (\n        <Text strong={maxedOut}>{` ${currentlyAssigned.length}/${max}`}</Text>\n      )}\n      <QualityEvaluation quality={quality} character={character} />\n      <Checkbox.Group\n        options={options}\n        onChange={onChange}\n        value={currentlyAssigned}\n      />\n    </Card>\n  );\n};\n\nconst BookSelector = ({ characters }) => {\n  return (\n    <ColumnsList\n      className=\"avh-library-selector\"\n      dataSource={characters}\n      renderItem={(character) => (\n        <List.Item key={character}>\n          <BookCheckList\n            key={character}\n            character={character}\n            {...slots(characters)[character]}\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default BookSelector;\n","import {\n  RASHOMON,\n  ALECTO,\n  KATRINA,\n  CAMILLA,\n  TEKELI,\n  CAROLE,\n} from \"../../characters\";\n\nexport const POOR = \"poor\";\nexport const OLD = \"old\";\nexport const RICH = \"rich\";\nexport const SUPERMARKET = \"supermarket\";\nexport const BANK = \"bank\";\nexport const LOCATIONS = [OLD, RICH, SUPERMARKET, BANK, POOR];\nexport const SPECIAL = \"special\";\n\nexport const score = (assignations) => {\n  let result = 0;\n\n  if ([TEKELI, CAROLE].includes(assignations[POOR])) {\n    result += 1;\n  }\n\n  if ([TEKELI, ALECTO].includes(assignations[OLD])) {\n    result += 1;\n  }\n\n  if ([CAMILLA, KATRINA].includes(assignations[BANK])) {\n    result += 1;\n  }\n\n  if (assignations[SPECIAL]) {\n    result += 1;\n  }\n\n  if (Object.values(assignations).includes(ALECTO)) {\n    result += 1;\n  }\n\n  return result;\n};\n\nexport const demonFound = (assignations) =>\n  [RASHOMON, CAMILLA, KATRINA].includes(assignations[BANK]);\n\nexport const success = (assignations) => score(assignations) >= 2;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { LOCATIONS, POOR } from \"./locations\";\nimport { TEKELI } from \"../../characters\";\n\nconst slice = createSlice({\n  name: \"city\",\n  initialState: {},\n  reducers: {\n    assign: (state, action) => {\n      const { character, location } = action.payload;\n      LOCATIONS.filter(\n        (location) => character !== TEKELI || location !== POOR\n      ).forEach((location) => {\n        if (state[location] === character) {\n          state[location] = null;\n        }\n      });\n      state[location] = character;\n    },\n    forceAssign: (state, action) => {\n      const { character, location } = action.payload;\n      state[location] = character;\n    },\n  },\n});\n\nexport const { assign, forceAssign } = slice.actions;\nexport const selectCity = () => (state) => state.city;\n\nexport default slice.reducer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSection,\n  setSection,\n  selectStep,\n  nextStep,\n  setChapter,\n} from \"../navigation/reducer\";\nimport Section from \"../navigation/Section\";\nimport {\n  CETO,\n  KATRINA,\n  MAHARAL,\n  TEKELI,\n  ALECTO,\n  CAROLE,\n  CAMILLA,\n  GUEST,\n} from \"../../characters\";\nimport { selectParty } from \"../party/reducer\";\nimport BookSelector from \"./BookSelector\";\nimport { selectLibrary } from \"../library/reducer\";\nimport {\n  BOOKS,\n  slots,\n  BAD,\n  GOOD,\n  success,\n  MYSTERY,\n  mimicUnveiled,\n  MIMIC,\n  SCIENCE,\n  testimonyFound,\n  quality,\n  FANTASY,\n  ROMANCE,\n  COFFEE,\n} from \"../library/books\";\nimport Results from \"../debrief/Results\";\nimport { forceAssign } from \"../city/reducer\";\nimport { SPECIAL } from \"../city/locations\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Library = () => {\n  const section = useSelector(selectSection);\n  const step = useSelector(selectStep);\n  const dispatch = useDispatch();\n  const goTo = (section) => () => dispatch(setSection(section));\n  const stepUp = () => dispatch(nextStep());\n  const party = useSelector(selectParty(\"library\"));\n  const library = useSelector(selectLibrary());\n  const { t } = useTranslation();\n\n  const PLANNING = \"planning\";\n  const READING = \"reading\";\n  const RESULTS = \"results\";\n\n  const nextChapter = () => dispatch(setChapter(\"city\"));\n\n  if (section === CAMILLA) {\n    return (\n      <Section\n        text={\"story.library.camilla\"}\n        character={CAMILLA}\n        next={goTo(RESULTS)}\n      />\n    );\n  }\n\n  if (section === RESULTS) {\n    const defaultParams = { characters: party, assignations: library };\n\n    const data = [\n      library[MYSTERY] !== BAD && {\n        key: \"dragon\",\n        character: library[MYSTERY],\n        type: \"success\",\n      },\n      mimicUnveiled(library) && {\n        key: \"mimic\",\n        character: library[MIMIC],\n        type: \"success\",\n      },\n      testimonyFound({ ...defaultParams }) && {\n        key: \"testimony\",\n        character: library[SCIENCE],\n        type: \"success\",\n      },\n      (quality({ book: FANTASY, ...defaultParams }) ||\n        quality({ book: MYSTERY, ...defaultParams })) && {\n        key: \"overkill\",\n        type: \"warning\",\n      },\n      [KATRINA, CETO].includes(library[ROMANCE]) && {\n        key: `ally.${library[ROMANCE]}`,\n      },\n      party.includes(CAMILLA) && {\n        key: \"dream\",\n      },\n    ].filter(Boolean);\n\n    return (\n      <Section next={nextChapter}>\n        <Results\n          context=\"library\"\n          success={success({ characters: party, assignations: library })}\n          data={data}\n        />\n      </Section>\n    );\n  }\n\n  if (section === READING) {\n    const qualities = slots(party);\n\n    const REST = \"rest\";\n    const poisoned = [ALECTO, KATRINA, CETO, CAROLE].includes(library[MIMIC]);\n    const orderedBooks = (() => {\n      if (!poisoned) {\n        return BOOKS;\n      }\n\n      const poisonedCharacter = library[MIMIC];\n\n      let list = [MYSTERY, FANTASY, MIMIC];\n      let remainder = [];\n\n      [COFFEE, ROMANCE, SCIENCE].forEach((book) => {\n        library[book] === poisonedCharacter\n          ? remainder.push(book)\n          : list.push(book);\n      });\n\n      if (remainder.length === 0) {\n        return list;\n      }\n\n      return [...list, REST, ...remainder];\n    })();\n\n    const chara = (book) => {\n      if (book === REST) {\n        return library[MIMIC];\n      }\n      return library[book];\n    };\n    const att = (character) => {\n      return qualities[character] ? qualities[character][\"quality\"] : BAD;\n    };\n\n    const results = orderedBooks\n      .map((book) => {\n        const character = chara(book);\n        const attentiveness = att(character);\n\n        const key = (() => {\n          switch (book) {\n            case MYSTERY:\n              return attentiveness !== BAD && \"mystery\";\n            case FANTASY:\n              return `fantasy.${attentiveness === GOOD ? \"good\" : \"default\"}`;\n            case MIMIC:\n              if (character === TEKELI) {\n                return \"mimic.tekeli\";\n              }\n              return (\n                [ALECTO, KATRINA, CETO, CAROLE].includes(character) &&\n                \"mimic.default\"\n              );\n            case COFFEE:\n              return `coffee.${\n                [ALECTO, CETO].includes(character) ? \"good\" : \"default\"\n              }`;\n            case ROMANCE:\n              return (\n                [CETO, KATRINA].includes(character) && `romance.${character}`\n              );\n            case SCIENCE:\n              if (character === CAMILLA) {\n                return \"science.camilla\";\n              }\n              return `science.${attentiveness === GOOD ? \"good\" : \"default\"}`;\n            case REST:\n              return \"rest\";\n            default:\n              return false;\n          }\n        })();\n        return key && { text: `story.library.books.${key}`, character, book };\n      })\n      .filter(Boolean);\n\n    const next = (() => {\n      if (results[step + 1]) {\n        return stepUp;\n      }\n      if (party.includes(CAMILLA)) {\n        return goTo(CAMILLA);\n      }\n      return goTo(RESULTS);\n    })();\n    return (\n      <Section\n        text={results[step][\"text\"]}\n        character={results[step][\"character\"]}\n        next={next}\n        heading={`${t(`locations.library.name`)} – ${t(\n          `locations.library.books.${results[step][\"book\"]}`\n        )}`}\n      />\n    );\n  }\n\n  if (section === PLANNING) {\n    const done = Object.values(library).filter(Boolean).length === BOOKS.length;\n    const next = () => {\n      if (library[ROMANCE] === KATRINA) {\n        dispatch(forceAssign({ character: GUEST, location: SPECIAL }));\n      }\n      goTo(READING)();\n    };\n\n    return (\n      <Section text={`story.library.planning`} next={done && next}>\n        <BookSelector characters={[...party].sort()} />\n      </Section>\n    );\n  }\n\n  const introduction = [MAHARAL, CETO, KATRINA].filter((character) =>\n    party.includes(character)\n  );\n  const character = introduction[step];\n\n  return (\n    <Section\n      text={`story.library.introduction.${character}`}\n      character={character}\n      next={!!introduction[step + 1] ? stepUp : goTo(PLANNING)}\n    />\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport { Card, Radio, List, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { LOCATIONS, POOR } from \"./locations\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectCity, assign } from \"./reducer\";\nimport { TEKELI, name } from \"../../characters\";\nimport \"./CitySelector.less\";\n\nconst { Text } = Typography;\n\nconst CityButtons = ({ character }) => {\n  const { t } = useTranslation();\n  const city = useSelector(selectCity());\n  const dispatch = useDispatch();\n\n  const places = LOCATIONS.filter(\n    (location) => character !== TEKELI || location !== POOR\n  );\n\n  return (\n    <Card>\n      <Text strong>{name({ t, character })}</Text>\n      <Radio.Group\n        onChange={(event) => {\n          dispatch(assign({ character, location: event.target.value }));\n        }}\n        value={places.find((location) => city[location] === character)}\n      >\n        {places.map((location) => {\n          const disabled = !!city[location] && city[location] !== character;\n\n          return (\n            <Radio.Button key={location} value={location} disabled={disabled}>\n              {t(`locations.city.locations.${location}`)}\n            </Radio.Button>\n          );\n        })}\n        {character === TEKELI && (\n          <Text type=\"secondary\" className=\"ant-radio-button-wrapper\">\n            + {t(`locations.city.locations.${POOR}`)}\n          </Text>\n        )}\n      </Radio.Group>\n    </Card>\n  );\n};\n\nconst CitySelector = ({ characters }) => {\n  return (\n    <List\n      className=\"avh-city-selector\"\n      dataSource={characters}\n      renderItem={(character) => (\n        <List.Item key={character}>\n          <CityButtons key={character} character={character} />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default CitySelector;\n","import React from \"react\";\nimport Section from \"../navigation/Section\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSection,\n  setSection,\n  selectStep,\n  nextStep,\n  setChapter,\n} from \"../navigation/reducer\";\nimport {\n  TEKELI,\n  ALECTO,\n  CAROLE,\n  RASHOMON,\n  CAMILLA,\n  KATRINA,\n  name,\n} from \"../../characters\";\nimport { selectCity, forceAssign } from \"./reducer\";\nimport {\n  POOR,\n  OLD,\n  SUPERMARKET,\n  BANK,\n  LOCATIONS,\n  success,\n  RICH,\n  SPECIAL,\n} from \"./locations\";\nimport { selectParty } from \"../party/reducer\";\nimport CitySelector from \"./CitySelector\";\nimport { useTranslation } from \"react-i18next\";\nimport Results from \"../debrief/Results\";\n\nconst adventure = ({ location, character, t }) => {\n  const tplus = (key) =>\n    t(`story.city.locations.${key}`, { name: name({ t, character }) });\n  const compose = (...keys) => {\n    return keys.map((key) => tplus(key)).join(\"\\n\\n\");\n  };\n\n  switch (location) {\n    case POOR:\n      if (![TEKELI, CAROLE].includes(character)) {\n        return compose(\"poor.intro\", \"poor.failure\");\n      }\n      return compose(\"poor.intro\", `poor.${character}`, \"poor.success\");\n    case OLD:\n      if (![TEKELI, ALECTO].includes(character)) {\n        return compose(\"old.intro\", \"old.failure\");\n      }\n      return compose(\"old.intro\", `old.${character}`, \"old.success\");\n    case SUPERMARKET:\n      if (character === CAROLE) {\n        return compose(\"supermarket.default\", \"supermarket.carole\");\n      }\n      return tplus(\"supermarket.default\");\n    case BANK:\n      if (character === RASHOMON) {\n        return compose(\"bank.default\", \"bank.rashomon\");\n      }\n      if ([CAMILLA, KATRINA].includes(character)) {\n        return compose(\"bank.default\", \"bank.spirit\");\n      }\n      return tplus(\"bank.default\");\n    default:\n      return tplus(location);\n  }\n};\n\nconst City = () => {\n  const section = useSelector(selectSection);\n  const dispatch = useDispatch();\n  const goTo = (section) => () => dispatch(setSection(section));\n  const party = useSelector(selectParty(\"city\"));\n  const city = useSelector(selectCity());\n  const step = useSelector(selectStep);\n  const stepUp = () => dispatch(nextStep());\n  const { t } = useTranslation();\n\n  const RESULTS = \"results\";\n  if (section === RESULTS) {\n    const noAccess =\n      (city[POOR] && ![TEKELI, CAROLE].includes(city[POOR])) ||\n      (city[OLD] && ![ALECTO, TEKELI].includes(city[OLD]));\n\n    const data = [\n      [TEKELI, CAROLE].includes(city[POOR]) && {\n        key: \"poor\",\n        character: city[POOR],\n        type: \"success\",\n      },\n      [ALECTO, TEKELI].includes(city[OLD]) && {\n        key: \"old\",\n        character: city[OLD],\n        type: \"success\",\n      },\n      party.includes(ALECTO) && {\n        key: \"alecto\",\n        type: \"success\",\n      },\n      city[SPECIAL] && {\n        key: \"spider\",\n        type: \"success\",\n      },\n      noAccess && {\n        key: \"no-access\",\n        type: \"warning\",\n      },\n      (city[RICH] || city[SUPERMARKET]) && {\n        key: \"useless\",\n        type: \"warning\",\n      },\n      [(CAMILLA, RASHOMON, KATRINA)].includes(city[BANK]) && {\n        key: \"ally\",\n        character: city[BANK],\n      },\n      party.includes(CAROLE) && {\n        key: \"dream\",\n      },\n    ].filter(Boolean);\n    return (\n      <Section next={() => dispatch(setChapter(\"finale\"))}>\n        <Results context=\"city\" success={success(city)} data={data} />\n      </Section>\n    );\n  }\n\n  const ACTION = \"action\";\n  if (section === ACTION) {\n    const parts = [\n      party.includes(CAROLE) && {\n        text: t(\"story.city.carole\"),\n        character: CAROLE,\n      },\n      party.includes(ALECTO) && {\n        text: t(\"story.city.alecto\"),\n        character: ALECTO,\n      },\n      ...LOCATIONS.filter((location) => !!city[location]).map((location) => {\n        const character = city[location];\n        return {\n          text: adventure({ location, character, t }),\n          character,\n          heading: `${t(`locations.city.name`)} – ${t(\n            `locations.city.locations.${location}`\n          )}`,\n        };\n      }),\n    ].filter(Boolean);\n    const { text, character, heading } = parts[step];\n    return (\n      <Section\n        text={text}\n        character={character}\n        translated={true}\n        next={parts[step + 1] ? stepUp : goTo(RESULTS)}\n        heading={heading}\n      />\n    );\n  }\n\n  const SPLIT = \"split\";\n  if (section === SPLIT) {\n    if (party.includes(TEKELI) && !city[POOR]) {\n      return <Section text={`story.city.split`} next={goTo(TEKELI)} />;\n    }\n\n    const completed = party.every((character) => {\n      const assignCount = Object.values(city).filter(\n        (chara) => chara === character\n      ).length;\n      if (character === TEKELI) {\n        return assignCount === 2;\n      }\n      return assignCount === 1;\n    });\n    const next = goTo(ACTION);\n\n    return (\n      <Section text={\"story.city.split\"} next={completed && next}>\n        <CitySelector characters={party} />\n      </Section>\n    );\n  }\n\n  if (section === TEKELI) {\n    return (\n      <Section\n        text={`story.city.tekeli`}\n        character={TEKELI}\n        next={() => {\n          dispatch(forceAssign({ character: TEKELI, location: POOR }));\n          goTo(SPLIT)();\n        }}\n      />\n    );\n  }\n\n  return (\n    <Section\n      text={`story.city.introduction`}\n      character={RASHOMON}\n      next={goTo(SPLIT)}\n    />\n  );\n};\n\nexport default City;\n","import React from \"react\";\nimport { Typography, Card, Button, Collapse } from \"antd\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Section from \"../navigation/Section\";\nimport \"./EndingSection.less\";\n\nconst { Paragraph } = Typography;\nconst { Panel } = Collapse;\n\nconst HOPE = \"hope\";\nconst RESPITE = \"respite\";\nconst BAD = \"bad\";\nconst ENDINGS = [BAD, RESPITE, HOPE];\n\nconst Hints = ({ forestSuccess, librarySuccess, citySuccess, tplus }) => {\n  return (\n    <>\n      {!forestSuccess && <Paragraph>{tplus(\"hints.forest\")}</Paragraph>}\n      {!librarySuccess && <Paragraph>{tplus(\"hints.library\")}</Paragraph>}\n      {!citySuccess && <Paragraph>{tplus(\"hints.city\")}</Paragraph>}\n    </>\n  );\n};\n\nconst EndingSection = ({\n  forestSuccess,\n  librarySuccess,\n  citySuccess,\n  entitiesFound,\n}) => {\n  const { t } = useTranslation();\n  const tplus = (key, params) => t(`extras.endings.${ending}.${key}`, params);\n\n  const success = forestSuccess && librarySuccess && citySuccess;\n  const ending = success ? (entitiesFound ? HOPE : RESPITE) : BAD;\n\n  return (\n    <Section text={`story.debrief.endings.${ending}`}>\n      <Card\n        title={t(\"extras.endings.title\", {\n          name: tplus(\"name\"),\n          index: ENDINGS.findIndex((end) => ending === end) + 1,\n          total: ENDINGS.length,\n        })}\n        className=\"avh-ending\"\n      >\n        {ending !== HOPE && (\n          <Collapse>\n            <Panel header={t(\"extras.endings.hints\")}>\n              {ending === BAD && (\n                <Hints\n                  forestSuccess={forestSuccess}\n                  librarySuccess={librarySuccess}\n                  citySuccess={citySuccess}\n                  tplus={tplus}\n                />\n              )}\n              {ending === RESPITE && <Paragraph>{tplus(\"hint\")}</Paragraph>}\n            </Panel>\n          </Collapse>\n        )}\n        {ending === HOPE && (\n          <Paragraph>\n            <Trans i18nKey={\"extras.thanks\"} />\n          </Paragraph>\n        )}\n        <Button onClick={() => window.location.reload(true)}>\n          {t(\"ui.restart\")}\n        </Button>\n      </Card>\n    </Section>\n  );\n};\n\nexport default EndingSection;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSection,\n  setSection,\n  selectStep,\n  nextStep,\n} from \"../navigation/reducer\";\nimport Section from \"../navigation/Section\";\nimport { CETO, CAROLE, CAMILLA, ALECTO } from \"../../characters\";\nimport { selectForest } from \"../forest/reducer\";\nimport { selectCity } from \"../city/reducer\";\nimport { selectLibrary } from \"../library/reducer\";\nimport {\n  WEST,\n  divineFound,\n  success as forestSuccessFunc,\n} from \"../forest/directions\";\nimport {\n  MIMIC,\n  ghostFound,\n  success as librarySuccessFunc,\n} from \"../library/books\";\nimport { demonFound, success as citySuccessFunc } from \"../city/locations\";\nimport { selectParty } from \"../party/reducer\";\nimport EndingSection from \"./EndingSection\";\n\nconst Debrief = () => {\n  const section = useSelector(selectSection);\n  const dispatch = useDispatch();\n  const goTo = (section) => () => dispatch(setSection(section));\n  const stepUp = () => dispatch(nextStep());\n  const forest = useSelector(selectForest());\n  const library = useSelector(selectLibrary());\n  const forestParty = useSelector(selectParty(\"forest\"));\n  const libraryParty = useSelector(selectParty(\"library\"));\n  const cityParty = useSelector(selectParty(\"city\"));\n  const city = useSelector(selectCity());\n  const step = useSelector(selectStep);\n\n  const forestSuccess = forestSuccessFunc(forest);\n  const librarySuccess = librarySuccessFunc({\n    characters: libraryParty,\n    assignations: library,\n  });\n  const citySuccess = citySuccessFunc(city);\n  const entitiesFound =\n    [divineFound(forest), demonFound(city), ghostFound(library)].filter(Boolean)\n      .length >= 2;\n  const tekeliSpecial =\n    [\n      forestParty.includes(CETO),\n      libraryParty.includes(CAMILLA),\n      cityParty.includes(CAROLE),\n    ].filter(Boolean).length >= 2;\n  const alectoSpecial = forest[WEST] === ALECTO || library[MIMIC] === ALECTO;\n\n  if (section === \"ending\") {\n    return (\n      <EndingSection\n        forestSuccess={forestSuccess}\n        librarySuccess={librarySuccess}\n        citySuccess={citySuccess}\n        entitiesFound={entitiesFound}\n      />\n    );\n  }\n\n  const parts = (() => {\n    const base = [alectoSpecial && \"alecto\", \"dejanire-intro\"].filter(Boolean);\n\n    if (!forestSuccess) {\n      return [...base, \"dejanire-failure\", \"werebeasts\"];\n    }\n\n    if (!librarySuccess) {\n      return [...base, \"maharal-failure\", \"book-burning\"];\n    }\n\n    if (!citySuccess) {\n      return [...base, \"maharal-success\", \"bad-reports\"];\n    }\n\n    if (tekeliSpecial) {\n      return [...base, \"maharal-success\", \"tekeli\", \"rashomon-success\"];\n    }\n\n    return [...base, \"maharal-success\", \"rashomon-success\"];\n  })();\n\n  return (\n    <Section\n      text={`story.debrief.${parts[step]}`}\n      next={parts[step + 1] ? stepUp : goTo(\"ending\")}\n    />\n  );\n};\n\nexport default Debrief;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSection,\n  setSection,\n  selectChapter,\n  setChapter,\n  setFadingOut,\n  selectInstantText,\n} from \"./features/navigation/reducer\";\nimport Section from \"./features/navigation/Section\";\nimport PartySelector from \"./features/party/PartySelector\";\nimport {\n  CETO,\n  ALECTO,\n  CAROLE,\n  KATRINA,\n  TEKELI,\n  CAMILLA,\n  RASHOMON,\n} from \"./characters\";\nimport Forest from \"./features/forest/Forest\";\nimport Library from \"./features/library/Library\";\nimport City from \"./features/city/City\";\nimport Debrief from \"./features/debrief/Debrief\";\n\nconst Game = () => {\n  const section = useSelector(selectSection);\n  const dispatch = useDispatch();\n  const goTo = (section) => () => dispatch(setSection(section));\n  const chapter = useSelector(selectChapter);\n  const instantText = useSelector(selectInstantText);\n\n  if (chapter === \"finale\") {\n    return <Debrief />;\n  }\n\n  if (chapter === \"city\") {\n    return <City />;\n  }\n\n  if (chapter === \"forest\") {\n    return <Forest />;\n  }\n\n  if (chapter === \"library\") {\n    return <Library />;\n  }\n\n  const meetingOrder = [CETO, ALECTO, CAROLE, KATRINA, TEKELI, CAMILLA];\n  const i = meetingOrder.indexOf(section);\n  if (i > -1) {\n    const next = goTo(meetingOrder[i + 1] || RASHOMON);\n\n    return (\n      <Section\n        text={`story.meeting.${section}`}\n        character={meetingOrder[i]}\n        next={next}\n        hideLastButton={true}\n      >\n        <PartySelector\n          character={section}\n          next={instantText ? next : () => dispatch(setFadingOut(true))}\n        />\n      </Section>\n    );\n  }\n\n  switch (section) {\n    case RASHOMON:\n      return (\n        <Section\n          text={\"story.meeting.rashomon\"}\n          next={() => dispatch(setChapter(\"forest\"))}\n          character={RASHOMON}\n        />\n      );\n    default:\n      return (\n        <Section\n          text={\"story.meeting.introduction\"}\n          next={goTo(CETO)}\n          character={RASHOMON}\n        />\n      );\n  }\n};\n\nexport default Game;\n","import React from \"react\";\nimport \"./App.less\";\nimport { useTranslation } from \"react-i18next\";\nimport { Radio, Switch } from \"antd\";\nimport \"./transitions.less\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectInstantText,\n  toggleInstantText,\n} from \"./features/navigation/reducer\";\n\nconst supportedLanguages = [\"en\", \"fr\"];\n\nconst LanguageSelector = () => {\n  const { i18n } = useTranslation();\n\n  return (\n    <Radio.Group\n      onChange={(event) => i18n.changeLanguage(event.target.value)}\n      defaultValue={i18n.language}\n    >\n      {supportedLanguages.map((language) => {\n        return (\n          <Radio.Button key={language} value={language}>\n            {language.toUpperCase()}\n          </Radio.Button>\n        );\n      })}\n    </Radio.Group>\n  );\n};\n\nconst InstantTextToggler = () => {\n  const { t } = useTranslation();\n  const instantText = useSelector(selectInstantText);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"instant-text-toggler\">\n      <Switch\n        checked={!instantText}\n        onClick={() => dispatch(toggleInstantText())}\n        unCheckedChildren={t(\"ui.instant-text-on\")}\n        checkedChildren={t(\"ui.instant-text-off\")}\n      />\n    </div>\n  );\n};\n\nconst Settings = () => {\n  return (\n    <>\n      <InstantTextToggler />\n      <LanguageSelector />\n    </>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport { Modal, Button, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Title, Paragraph } = Typography;\n\nconst About = () => {\n  const [visible, setVisible] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Button shape=\"circle\" size=\"small\" onClick={() => setVisible(true)}>\n        ?\n      </Button>\n      <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\n        <Title level={2}>{t(\"ui.title\")}</Title>\n        {Object.values(t(\"extras.credits\", { returnObjects: true })).map(\n          (text, index) => {\n            return <Paragraph key={index.toString()}>{text}</Paragraph>;\n          }\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default About;\n","import React, { useEffect } from \"react\";\nimport \"./App.less\";\nimport Game from \"./Game\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./transitions.less\";\nimport Settings from \"./Settings\";\nimport About from \"./About\";\n\nconst App = () => {\n  const { t } = useTranslation();\n  useEffect(() => {\n    document.title = t(\"ui.title\");\n  }, [t]);\n\n  return (\n    <>\n      <header>\n        <Settings />\n        <About />\n      </header>\n      <main>\n        <Game />\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport navigationReducer from \"../features/navigation/reducer\";\nimport partyReducer from \"../features/party/reducer\";\nimport forestReducer from \"../features/forest/reducer\";\nimport libraryReducer from \"../features/library/reducer\";\nimport cityReducer from \"../features/city/reducer\";\n\nexport default configureStore({\n  reducer: {\n    navigation: navigationReducer,\n    party: partyReducer,\n    forest: forestReducer,\n    library: libraryReducer,\n    city: cityReducer,\n  },\n});\n","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport en from \"./i18n/en.json\";\nimport fr from \"./i18n/fr.json\";\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    ns: [\"all\"],\n    defaultNS: \"all\",\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n    resources: { en: { all: en }, fr: { all: fr } },\n    react: {\n      transKeepBasicHtmlNodesFor: [\"br\", \"p\", \"strong\", \"em\"],\n    },\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport \"./i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}