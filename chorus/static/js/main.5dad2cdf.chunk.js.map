{"version":3,"sources":["features/navigation/reducer.js","characters.js","features/characters/Profile.js","features/characters/CharacterHeader.js","features/navigation/Section.js","features/party/reducer.js","features/design/ColumnsList.js","features/party/PartySelector.js","features/forest/directions.js","features/forest/reducer.js","features/forest/ForestSelector.js","features/debrief/Results.js","features/forest/Forest.js","features/library/books.js","features/library/reducer.js","features/library/BookSelector.js","features/city/locations.js","features/city/reducer.js","features/library/Library.js","features/city/CitySelector.js","features/city/City.js","features/debrief/EndingSection.js","features/debrief/Debrief.js","Game.js","Settings.js","About.js","App.js","app/store.js","i18n.js","index.js"],"names":["initialState","chapter","section","subsection","instantText","step","fadingOut","slice","createSlice","name","reducers","setSection","state","action","payload","nextSubSection","toggleInstantText","setChapter","nextStep","setFadingOut","actions","selectSection","navigation","selectSubSection","selectInstantText","selectChapter","selectStep","selectFadingOut","DEJANIRE","MAHARAL","RASHOMON","CETO","ALECTO","CAROLE","KATRINA","TEKELI","CAMILLA","character","t","Title","Typography","Link","standardizedAnswers","freeTextAnswers","profiles","nature","humanoid","species","impetus","bookishness","orderedKeys","FakeLink","children","useTranslation","title","disabled","dataSource","i18n","profile","map","key","includes","description","exists","find","filter","Fragment","Trans","i18nKey","values","Boolean","Profile","className","level","renderItem","Item","Meta","Text","CharacterHeader","useState","showRecord","setShowRecord","strong","shape","size","onClick","placement","visible","onClose","width","Paragraph","FadeInAndScrollTo","useSelector","useEffect","window","scrollTo","top","document","body","scrollHeight","behavior","Animate","transitionName","transitionAppear","SubSection","text","split","paragraph","index","toString","dangerouslySetInnerHTML","__html","sanitizeHtml","ContinueButton","React","forwardRef","ref","buttonRef","useRef","useImperativeHandle","click","current","focus","refDefined","e","preventDefault","stopPropagation","SubSections","subsections","length","Controls","AnimationBlock","AnimationContainer","animationId","fadeOutBeforeAction","scrollUpOnAppear","transitionEnter","transitionLeave","showProp","onEnd","_","RawSection","canClickOnWholeCard","hideButton","continueRef","dispatch","useDispatch","setVisible","actualAction","data-character","hoverable","Section","next","translated","hideLastButton","subSectionIndex","substring","language","translatedText","showAll","visibleSubsections","forest","library","city","addToParty","location","push","selectParty","party","ColumnsList","props","grid","gutter","column","xs","PartyCard","arr","len","fill","full","data-location","blur","bordered","concat","Array","LocationCard","PartySelector","WEST","DIRECTIONS","success","assignations","total","score","sendTo","direction","forEach","rearrangedDirections","ForestRoseWind","Group","onChange","event","target","value","Button","ForestSelector","characters","Results","context","data","tplus","params","conclusion","type","footer","Forest","goTo","stepUp","forestParty","adventures","tree","Object","keys","returnObjects","defaultValue","join","fallbackKey","completed","every","introduction","parts","BOOKS","SLOW","GOOD","slots","quality","assistants","Error","otherAssistant","max","fromEntries","assistSlots","mimicUnveiled","ghostFound","book","testimonyFound","result","s","baseScore","mod","reduce","acc","Math","char","unusedSlots","assignList","books","QualityEvaluation","version","BookCheckList","currentlyAssigned","maxedOut","options","label","BookSelector","POOR","OLD","LOCATIONS","demonFound","assign","forceAssign","Library","defaultParams","qualities","results","attentiveness","done","sort","CityButtons","places","CitySelector","adventure","compose","City","noAccess","assignCount","chara","Panel","Collapse","ENDINGS","Hints","forestSuccess","librarySuccess","citySuccess","EndingSection","entitiesFound","ending","findIndex","end","header","reload","Debrief","libraryParty","cityParty","forestSuccessFunc","librarySuccessFunc","citySuccessFunc","tekeliSpecial","alectoSpecial","base","Game","meetingOrder","i","indexOf","supportedLanguages","LanguageSelector","changeLanguage","toUpperCase","InstantTextToggler","checked","unCheckedChildren","checkedChildren","Settings","About","onCancel","App","configureStore","reducer","navigationReducer","partyReducer","forestReducer","libraryReducer","cityReducer","use","LanguageDetector","initReactI18next","init","ns","defaultNS","fallbackLng","interpolation","escapeValue","resources","en","all","fr","react","transKeepBasicHtmlNodesFor","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.5dad2cdf.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  chapter: null,\n  section: null,\n  subsection: 0,\n  instantText: false,\n  step: 0,\n  fadingOut: false,\n};\n\nconst slice = createSlice({\n  name: \"navigation\",\n  initialState,\n  reducers: {\n    setSection: (state, action) => {\n      state.section = action.payload;\n      state.subsection = initialState.subsection;\n      state.step = initialState.step;\n    },\n    nextSubSection: (state) => {\n      state.subsection++;\n    },\n    toggleInstantText: (state) => {\n      state.instantText = !state.instantText;\n    },\n    setChapter: (state, action) => {\n      state.chapter = action.payload;\n      state.section = initialState.section;\n      state.subsection = initialState.subsection;\n      state.step = initialState.step;\n    },\n    nextStep: (state) => {\n      state.step++;\n    },\n    setFadingOut: (state, action) => {\n      state.fadingOut = action.payload;\n    },\n  },\n});\n\nexport const {\n  setSection,\n  nextSubSection,\n  toggleInstantText,\n  setChapter,\n  nextStep,\n  setFadingOut,\n} = slice.actions;\nexport const selectSection = (state) => state.navigation.section;\nexport const selectSubSection = (state) => state.navigation.subsection;\nexport const selectInstantText = (state) => state.navigation.instantText;\nexport const selectChapter = (state) => state.navigation.chapter;\nexport const selectStep = (state) => state.navigation.step;\nexport const selectFadingOut = (state) => state.navigation.fadingOut;\n\nexport default slice.reducer;\n","export const DEJANIRE = \"dejanire\";\nexport const MAHARAL = \"maharal\";\nexport const RASHOMON = \"rashomon\";\nexport const CETO = \"ceto\";\nexport const ALECTO = \"alecto\";\nexport const CAROLE = \"carole\";\nexport const KATRINA = \"katrina\";\nexport const TEKELI = \"tekeli\";\nexport const CAMILLA = \"camilla\";\nexport const GUEST = \"???\";\n\nexport const name = ({ character, t }) => t(`characters.${character}.name`);\n","import React from \"react\";\nimport { Typography, List, Tooltip } from \"antd\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport {\n  RASHOMON,\n  CETO,\n  ALECTO,\n  CAROLE,\n  KATRINA,\n  TEKELI,\n  CAMILLA,\n  DEJANIRE,\n  MAHARAL,\n  name,\n} from \"../../characters\";\nimport \"./Profile.less\";\n\nconst { Title, Link } = Typography;\n\nconst standardizedAnswers = [\"nature\", \"humanoid\", \"impetus\", \"bookishness\"];\nconst freeTextAnswers = [\"of-note\", \"job\"];\n\nconst profiles = {\n  [RASHOMON]: {\n    nature: \"flesh\",\n    humanoid: \"class-2\",\n    species: [\"oni\"],\n    impetus: \"average\",\n    bookishness: \"low\",\n  },\n  [CETO]: {\n    nature: \"flesh\",\n    humanoid: \"class-3\",\n    species: [\"lamia\", \"gorgon\"],\n    impetus: \"average\",\n    bookishness: \"high\",\n  },\n  [ALECTO]: {\n    nature: \"flesh\",\n    humanoid: \"class-3\",\n    species: [\"harpy\"],\n    impetus: \"good\",\n    bookishness: \"medium\",\n  },\n  [CAROLE]: {\n    nature: \"mixed\",\n    humanoid: \"class-1\",\n    species: [\"catgirl\", \"cheshire\"],\n    impetus: \"degraded\",\n    bookishness: \"low\",\n  },\n  [KATRINA]: {\n    nature: \"half-fay\",\n    humanoid: \"class-1\",\n    species: [\"dullahan\"],\n    impetus: \"average\",\n    bookishness: \"medium\",\n  },\n  [TEKELI]: {\n    nature: \"mixed\",\n    humanoid: \"class-7\",\n    species: [\"slime\"],\n    impetus: \"good\",\n    bookishness: \"null\",\n  },\n  [CAMILLA]: {\n    nature: \"dream\",\n    humanoid: \"class-1\",\n    species: [\"mask\"],\n    impetus: \"good\",\n    bookishness: \"null\",\n  },\n  [DEJANIRE]: {\n    nature: \"flesh\",\n    humanoid: \"class-3\",\n    species: [\"centaur\"],\n    impetus: \"bad\",\n    bookishness: \"high\",\n  },\n  [MAHARAL]: {\n    nature: \"composite\",\n    humanoid: \"class-7\",\n    species: [\"elemental\", \"golem\"],\n    impetus: \"average\",\n    bookishness: \"high\",\n  },\n};\n\nconst orderedKeys = [\n  \"nature\",\n  \"job\",\n  \"humanoid\",\n  \"appearance\",\n  \"impetus\",\n  \"bookishness\",\n  \"of-note\",\n];\n\nconst FakeLink = ({ children }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Tooltip title={t(\"extras.profile.links.error\")}>\n      <Link disabled>{children}</Link>\n    </Tooltip>\n  );\n};\n\nconst dataSource = ({ character, t, i18n }) => {\n  const profile = profiles[character];\n  if (!profile) {\n    return [];\n  }\n\n  return orderedKeys\n    .map((key) => {\n      if (standardizedAnswers.includes(key)) {\n        if (!profile[key]) {\n          return null;\n        }\n\n        return {\n          title: t(`extras.profile.${key}.title`),\n          description: t(`extras.profile.${key}.${profile[key]}`),\n        };\n      }\n\n      if (freeTextAnswers.includes(key)) {\n        if (!i18n.exists(`characters.${character}.profile.${key}`)) {\n          return null;\n        }\n\n        return {\n          title: t(`extras.profile.${key}.title`),\n          description: t(`characters.${character}.profile.${key}`),\n        };\n      }\n\n      if (key === \"appearance\") {\n        if (\n          !profile[\"species\"].find((species) =>\n            i18n.exists(`extras.profile.appearance.${species}`)\n          ) ||\n          !i18n.exists(`characters.${character}.profile.appearance`)\n        ) {\n          return false;\n        }\n\n        return {\n          title: t(`extras.profile.appearance.title`),\n          description: (\n            <>\n              {profile[\"species\"]\n                .filter((species) =>\n                  i18n.exists(`extras.profile.appearance.${species}`)\n                )\n                .map((species) => {\n                  return (\n                    <React.Fragment key={species}>\n                      {t(`extras.profile.appearance.${species}.features`)}{\" \"}\n                      <FakeLink>\n                        <Trans\n                          i18nKey={\"extras.profile.links.see_more\"}\n                          values={{\n                            species: t(\n                              `extras.profile.appearance.${species}.name`\n                            ),\n                          }}\n                        />\n                      </FakeLink>\n                      <br />\n                    </React.Fragment>\n                  );\n                })}\n              {t(`characters.${character}.profile.appearance`)}\n            </>\n          ),\n        };\n      }\n\n      return null;\n    })\n    .filter(Boolean);\n};\n\nconst Profile = ({ character }) => {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <div className=\"avh-character-profile\">\n      <Title level={3}>{name({ t, character })}</Title>\n      <List\n        dataSource={dataSource({ character, t, i18n })}\n        renderItem={({ title, description }) => (\n          <List.Item>\n            <List.Item.Meta title={title} description={description} />\n          </List.Item>\n        )}\n      />\n      <FakeLink>{t(\"extras.profile.links.see_all\")}</FakeLink>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport { Typography, Card, Button, Drawer } from \"antd\";\nimport \"./CharacterHeader.less\";\nimport { useTranslation } from \"react-i18next\";\nimport Profile from \"./Profile\";\nimport { name } from \"../../characters\";\n\nconst { Text } = Typography;\n\nconst CharacterHeader = ({ character }) => {\n  const [showRecord, setShowRecord] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <Card className=\"avh-character-header\">\n      <Text strong>{name({ t, character })}</Text>\n      <Button shape=\"circle\" size=\"small\" onClick={() => setShowRecord(true)}>\n        ?\n      </Button>\n      <Drawer\n        placement={\"left\"}\n        visible={showRecord}\n        onClose={() => setShowRecord(false)}\n        width={\"min(100%, 512px)\"}\n      >\n        <Profile character={character} />\n      </Drawer>\n    </Card>\n  );\n};\n\nexport default CharacterHeader;\n","import React, { useEffect, useRef, useImperativeHandle } from \"react\";\nimport sanitizeHtml from \"sanitize-html\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSubSection,\n  nextSubSection,\n  selectInstantText,\n  selectFadingOut,\n  setFadingOut,\n} from \"./reducer\";\nimport { Typography, Card, Button } from \"antd\";\nimport \"./Section.less\";\nimport Animate from \"rc-animate\";\nimport CharacterHeader from \"../characters/CharacterHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { name } from \"../../characters\";\n\nconst { Paragraph } = Typography;\n\nconst FadeInAndScrollTo = ({ children }) => {\n  const instantText = useSelector(selectInstantText);\n\n  useEffect(() => {\n    if (instantText) {\n      return;\n    }\n    window.scrollTo({ top: document.body.scrollHeight, behavior: \"smooth\" });\n  }, [instantText]);\n\n  if (instantText) {\n    return <>{children}</>;\n  }\n\n  return (\n    <Animate transitionName=\"fade\" transitionAppear>\n      <div>{children}</div>\n    </Animate>\n  );\n};\n\nconst SubSection = ({ text }) => {\n  return (\n    <FadeInAndScrollTo>\n      <Paragraph>\n        {text.split(\"\\n\").map((paragraph, index) => {\n          return (\n            <p\n              key={index.toString()}\n              dangerouslySetInnerHTML={{ __html: sanitizeHtml(paragraph) }}\n            />\n          );\n        })}\n      </Paragraph>\n    </FadeInAndScrollTo>\n  );\n};\n\nconst ContinueButton = React.forwardRef(({ action }, ref) => {\n  const buttonRef = useRef();\n  useImperativeHandle(ref, () => ({\n    click: () => {\n      buttonRef.current.focus();\n      buttonRef.current.click();\n    },\n  }));\n  const refDefined = !!buttonRef.current;\n  const instantText = useSelector(selectInstantText);\n  useEffect(() => {\n    if (instantText) {\n      return;\n    }\n    buttonRef.current.focus();\n  }, [refDefined, instantText]);\n\n  return (\n    <Button\n      ref={buttonRef}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        action();\n      }}\n    >\n      {\">>>\"}\n    </Button>\n  );\n});\n\nconst SubSections = ({ subsections }) => {\n  if (!subsections.length) {\n    return null;\n  }\n\n  return (\n    <div className=\"avh-subsections\">\n      {subsections.map((text, index) => {\n        return <SubSection key={index.toString()} text={text} />;\n      })}\n    </div>\n  );\n};\n\nconst Controls = React.forwardRef(({ action }, ref) => {\n  return (\n    <div className=\"avh-controls\">\n      <ContinueButton ref={ref} action={action} />\n    </div>\n  );\n});\n\nconst AnimationBlock = ({ children }) => {\n  return <div>{children}</div>;\n};\n\nconst AnimationContainer = ({\n  children,\n  animationId,\n  visible,\n  action,\n  fadeOutBeforeAction,\n  scrollUpOnAppear,\n}) => {\n  useEffect(() => {\n    if (!animationId) {\n      return;\n    }\n    if (scrollUpOnAppear) {\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n    }\n  }, [animationId, scrollUpOnAppear]);\n\n  if (!animationId) {\n    return <>{children}</>;\n  }\n\n  return (\n    <Animate\n      transitionName=\"fade\"\n      transitionEnter={false}\n      transitionLeave={fadeOutBeforeAction}\n      showProp=\"visible\"\n      onEnd={(_, exists) => {\n        if (!exists) {\n          action();\n        }\n      }}\n    >\n      <AnimationBlock key={animationId} visible={visible}>\n        {children}\n      </AnimationBlock>\n    </Animate>\n  );\n};\n\nconst RawSection = ({\n  character,\n  canClickOnWholeCard,\n  animationId,\n  action,\n  fadeOutBeforeAction,\n  children,\n  hideButton,\n}) => {\n  const continueRef = useRef();\n  const dispatch = useDispatch();\n  const visible = !useSelector(selectFadingOut);\n  const setVisible = (visible) => dispatch(setFadingOut(!visible));\n  const startFadingOut = () => setVisible(false);\n  const endFadingOutAndContinue = () => {\n    setVisible(true);\n    action();\n  };\n  const actualAction = fadeOutBeforeAction ? startFadingOut : action;\n  const scrollUpOnAppear = animationId && !fadeOutBeforeAction; // FIXME: Arcane rule\n\n  return (\n    <div data-character={character}>\n      {character && <CharacterHeader character={character} />}\n      <Card\n        className=\"avh-section\"\n        hoverable={canClickOnWholeCard}\n        onClick={() => canClickOnWholeCard && continueRef.current.click()}\n      >\n        <AnimationContainer\n          animationId={animationId}\n          visible={visible}\n          action={endFadingOutAndContinue}\n          fadeOutBeforeAction={fadeOutBeforeAction}\n          scrollUpOnAppear={scrollUpOnAppear}\n        >\n          {children}\n        </AnimationContainer>\n        {!!action && !hideButton && (\n          <Controls ref={continueRef} action={actualAction} />\n        )}\n      </Card>\n    </div>\n  );\n};\n\nconst Section = ({\n  text,\n  children,\n  next,\n  character,\n  translated = false,\n  hideLastButton = false,\n}) => {\n  const subSectionIndex = useSelector(selectSubSection);\n  const dispatch = useDispatch();\n  const instantText = useSelector(selectInstantText);\n  const { t, i18n } = useTranslation();\n\n  const animationId = (() => {\n    if (!text) {\n      return null;\n    }\n    if (translated) {\n      return text.substring(0, 32);\n    }\n    return `${i18n.language}.${text}`;\n  })();\n\n  const translatedText = (() => {\n    if (!text) {\n      return null;\n    }\n    if (translated) {\n      return text;\n    }\n    return t(text, { name: name({ t, character }) });\n  })();\n  const subsections = translatedText?.split(/\\n{2,}/) || [];\n  const showAll = (() => {\n    if (!text) {\n      return true;\n    }\n    if (instantText) {\n      return true;\n    }\n    if (children) {\n      return subSectionIndex >= subsections.length;\n    }\n    return subSectionIndex >= subsections.length - 1;\n  })();\n  const visibleSubsections = (() => {\n    if (showAll) {\n      return subsections;\n    }\n    return subsections.filter((_, index) => index <= subSectionIndex);\n  })();\n  const action = (() => {\n    if (showAll) {\n      return next;\n    }\n    return () => dispatch(nextSubSection());\n  })();\n  const canClickOnWholeCard = !!action && (!showAll || !children);\n\n  return (\n    <RawSection\n      character={character}\n      canClickOnWholeCard={canClickOnWholeCard}\n      animationId={animationId}\n      action={action}\n      fadeOutBeforeAction={!instantText && showAll && animationId && next}\n      hideButton={showAll && hideLastButton}\n    >\n      <SubSections subsections={visibleSubsections} />\n      {showAll && <FadeInAndScrollTo>{children}</FadeInAndScrollTo>}\n    </RawSection>\n  );\n};\n\nexport default Section;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { DEJANIRE, MAHARAL, RASHOMON } from \"../../characters\";\n\nconst slice = createSlice({\n  name: \"party\",\n  initialState: {\n    forest: [DEJANIRE],\n    library: [MAHARAL],\n    city: [RASHOMON],\n  },\n  reducers: {\n    addToParty: (state, action) => {\n      const { character, location } = action.payload;\n      state[location].push(character);\n    },\n  },\n});\n\nexport const { addToParty } = slice.actions;\nexport const selectParty = (location) => (state) => state.party[location];\n\nexport default slice.reducer;\n","import React from \"react\";\nimport { List } from \"antd\";\n\nconst ColumnsList = ({ dataSource, ...props }) => {\n  return (\n    <List\n      grid={{\n        gutter: 16,\n        column: dataSource.length,\n        xs: 1,\n      }}\n      dataSource={dataSource}\n      {...props}\n    />\n  );\n};\n\nexport default ColumnsList;\n","import React, { useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectParty, addToParty } from \"./reducer\";\nimport { Typography, Card, List, Button } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./PartySelector.less\";\nimport { name } from \"../../characters\";\nimport ColumnsList from \"../design/ColumnsList\";\n\nconst { Text } = Typography;\n\nconst pad = (arr, len, fill) => arr.concat(Array(len).fill(fill)).slice(0, len);\n\nconst PartyCard = ({ party, location, full, onClick }) => {\n  const { t } = useTranslation();\n  const buttonRef = useRef();\n\n  return (\n    <Card\n      data-location={location}\n      title={t(`locations.${location}.title`)}\n      hoverable={!full}\n      onClick={() => {\n        buttonRef.current.blur();\n        onClick();\n      }}\n    >\n      <List\n        bordered={!full}\n        dataSource={pad(party, 3, \"placeholder\")}\n        renderItem={(character) => (\n          <List.Item>\n            <Text>{name({ t, character })}</Text>\n          </List.Item>\n        )}\n      />\n      <Button ref={buttonRef} disabled={full}>\n        {\"+\"}\n      </Button>\n    </Card>\n  );\n};\n\nconst LocationCard = ({ location, character, next }) => {\n  const party = useSelector(selectParty(location));\n  const dispatch = useDispatch();\n\n  const full = party.length >= 3;\n  const onClick = () => {\n    if (full) {\n      return;\n    }\n    dispatch(addToParty({ character, location }));\n    next();\n  };\n\n  return (\n    <PartyCard\n      party={party}\n      location={location}\n      full={full}\n      onClick={onClick}\n    />\n  );\n};\n\nconst PartySelector = ({ character, next }) => {\n  const locations = [\"forest\", \"library\", \"city\"];\n\n  return (\n    <ColumnsList\n      className=\"avh-party-selector\"\n      dataSource={locations}\n      renderItem={(location) => (\n        <List.Item key={location}>\n          <LocationCard\n            key={location}\n            location={location}\n            character={character}\n            next={next}\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default PartySelector;\n","import {\n  DEJANIRE,\n  ALECTO,\n  CAMILLA,\n  CAROLE,\n  CETO,\n  KATRINA,\n  TEKELI,\n} from \"../../characters\";\n\nexport const NORTH = \"north\";\nexport const SOUTH = \"south\";\nexport const WEST = \"west\";\nexport const EAST = \"east\";\n\nexport const DIRECTIONS = [NORTH, EAST, SOUTH, WEST];\n\nexport const score = (assignations) => {\n  let total = 0;\n\n  switch (assignations[NORTH]) {\n    case ALECTO:\n    case CAROLE:\n      total += 1;\n      break;\n    case CAMILLA:\n    case KATRINA:\n      total += 2;\n      break;\n    case CETO:\n    case DEJANIRE:\n      total += 3;\n      break;\n    case TEKELI:\n      total += 4;\n      break;\n    default:\n      break;\n  }\n\n  switch (assignations[SOUTH]) {\n    case ALECTO:\n      total += 1;\n      break;\n    case DEJANIRE:\n    case KATRINA:\n      total += 2;\n      break;\n    case CETO:\n      total += 3;\n      break;\n    case CAMILLA:\n    case TEKELI:\n      total += 4;\n      break;\n    default:\n      break;\n  }\n\n  switch (assignations[WEST]) {\n    case TEKELI:\n    case CAROLE:\n      total += 1;\n      break;\n    case CETO:\n    case DEJANIRE:\n      total += 3;\n      break;\n    default:\n      break;\n  }\n\n  switch (assignations[EAST]) {\n    case ALECTO:\n      total += 1;\n      break;\n    case CAMILLA:\n      total += 2;\n      break;\n    case CETO:\n    case DEJANIRE:\n    case KATRINA:\n    case CAROLE:\n      total += 3;\n      break;\n    case TEKELI:\n      total += 4;\n      break;\n    default:\n      break;\n  }\n\n  return total;\n};\n\nexport const divineFound = (assignations) => {\n  return [DEJANIRE, CAMILLA].includes(assignations[SOUTH]);\n};\n\nexport const success = (assignations) => score(assignations) >= 7;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { DIRECTIONS } from \"./directions\";\n\nconst slice = createSlice({\n  name: \"forest\",\n  initialState: {},\n  reducers: {\n    sendTo: (state, action) => {\n      const { character, direction } = action.payload;\n      DIRECTIONS.forEach((direction) => {\n        if (state[direction] === character) {\n          state[direction] = null;\n        }\n      });\n      state[direction] = character;\n    },\n  },\n});\n\nexport const { sendTo } = slice.actions;\nexport const selectForest = () => (state) => state.forest;\n\nexport default slice.reducer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectForest, sendTo } from \"./reducer\";\nimport { Card, Radio, List, Typography } from \"antd\";\nimport { CAROLE, name } from \"../../characters\";\nimport \"./ForestSelector.less\";\nimport { useTranslation } from \"react-i18next\";\nimport { DIRECTIONS, SOUTH, NORTH, WEST, EAST } from \"./directions\";\nimport ColumnsList from \"../design/ColumnsList\";\n\nconst { Text } = Typography;\n\nconst rearrangedDirections = [NORTH, WEST, EAST, SOUTH];\n\nconst ForestRoseWind = ({ character }) => {\n  const forest = useSelector(selectForest());\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <Text strong>{name({ t, character })}</Text>\n      <Radio.Group\n        onChange={(event) => {\n          dispatch(sendTo({ character, direction: event.target.value }));\n        }}\n        value={DIRECTIONS.find((direction) => forest[direction] === character)}\n      >\n        {rearrangedDirections.map((direction) => {\n          const disabled = (() => {\n            if (character === CAROLE && direction === SOUTH) {\n              return true;\n            }\n            return !!forest[direction] && forest[direction] !== character;\n          })();\n\n          return (\n            <Radio.Button key={direction} value={direction} disabled={disabled}>\n              {t(`locations.forest.directions.${direction}`)}\n            </Radio.Button>\n          );\n        })}\n      </Radio.Group>\n    </Card>\n  );\n};\n\nconst ForestSelector = ({ characters }) => {\n  return (\n    <ColumnsList\n      className=\"avh-forest-selector\"\n      dataSource={characters}\n      renderItem={(character) => (\n        <List.Item key={character}>\n          <ForestRoseWind key={character} character={character} />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default ForestSelector;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Typography, List } from \"antd\";\nimport { name } from \"../../characters\";\n\nconst { Text, Title } = Typography;\n\nconst Results = ({ context, success, data }) => {\n  const { t } = useTranslation();\n  const tplus = (key, params) => t(`extras.results.${context}.${key}`, params);\n\n  const conclusion = success ? (\n    <Text strong type=\"success\">\n      {tplus(\"good\")}\n    </Text>\n  ) : (\n    <Text strong type=\"warning\">\n      {tplus(\"bad\")}\n    </Text>\n  );\n\n  return (\n    <div className=\"avh-chapter-results\">\n      <Title level={3}>{t(\"extras.results.title\")}</Title>\n      <List\n        footer={conclusion}\n        dataSource={data}\n        renderItem={({ key, character, type }) => (\n          <List.Item>\n            <Text type={type}>\n              {tplus(key, { name: name({ character, t }) })}\n            </Text>\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default Results;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSection,\n  setSection,\n  selectStep,\n  nextStep,\n  setChapter,\n} from \"../navigation/reducer\";\nimport { useTranslation } from \"react-i18next\";\nimport Section from \"../navigation/Section\";\nimport {\n  CETO,\n  CAROLE,\n  CAMILLA,\n  ALECTO,\n  KATRINA,\n  DEJANIRE,\n  name,\n  TEKELI,\n} from \"../../characters\";\nimport { selectParty } from \"../party/reducer\";\nimport ForestSelector from \"./ForestSelector\";\nimport { selectForest } from \"./reducer\";\nimport { Typography } from \"antd\";\nimport { DIRECTIONS, WEST, success, EAST, SOUTH } from \"./directions\";\nimport Results from \"../debrief/Results\";\n\nconst { Paragraph } = Typography;\n\nconst Forest = () => {\n  const section = useSelector(selectSection);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const goTo = (section) => () => dispatch(setSection(section));\n  const stepUp = () => dispatch(nextStep());\n  const forestParty = useSelector(selectParty(\"forest\"));\n  const forest = useSelector(selectForest());\n  const step = useSelector(selectStep);\n\n  const PLANNING = \"planning\";\n  const EXPLORATION = \"exploration\";\n  const RESULTS = \"results\";\n\n  if (section === RESULTS) {\n    const data = [\n      forestParty.includes(CETO) && {\n        key: \"optigirl\",\n        character: CETO,\n        type: \"success\",\n      },\n      forestParty.includes(TEKELI) &&\n        forest[WEST] !== TEKELI && {\n          key: \"optigirl\",\n          character: TEKELI,\n          type: \"success\",\n        },\n      [ALECTO, CAMILLA, KATRINA].includes(forest[WEST]) && {\n        key: \"beast\",\n        character: forest[WEST],\n        type: \"warning\",\n      },\n      forestParty.includes(ALECTO) &&\n        forest[WEST] !== ALECTO && {\n          key: \"citygirl\",\n          character: ALECTO,\n          type: \"warning\",\n        },\n      forestParty.includes(CAROLE) &&\n        forest[EAST] !== CAROLE && {\n          key: \"citygirl\",\n          character: CAROLE,\n          type: \"warning\",\n        },\n      [CAROLE, KATRINA].includes(forest[EAST]) && {\n        key: \"fairies\",\n        character: forest[EAST],\n        type: \"success\",\n      },\n      forestParty.includes(CETO) && {\n        key: \"dream\",\n      },\n      [CAMILLA, DEJANIRE].includes(forest[SOUTH]) && {\n        key: `ally.${forest[SOUTH]}`,\n      },\n    ].filter(Boolean);\n\n    return (\n      <Section next={() => dispatch(setChapter(\"library\"))}>\n        <Results context=\"forest\" success={success(forest)} data={data} />\n      </Section>\n    );\n  }\n\n  if (section === EXPLORATION) {\n    const root = \"story.forest.exploration\";\n\n    const adventures = DIRECTIONS.map((direction) => {\n      const character = forest[direction];\n      if (!character) {\n        return \"\";\n      }\n      const text = (() => {\n        if (\n          direction === WEST &&\n          [ALECTO, CAMILLA, KATRINA].includes(character)\n        ) {\n          const tree = `${root}.monster`;\n\n          return Object.keys(t(tree, { returnObjects: true }))\n            .map((index) => {\n              return t(`${tree}.${index}.${character}`, {\n                defaultValue: t(`${tree}.${index}.default`),\n              });\n            })\n            .join(\"\\n\\n\");\n        }\n\n        const key = `story.forest.exploration.${character}.${direction}`;\n        const fallbackKey = `story.forest.exploration.${character}.default`;\n        return t(key, {\n          defaultValue: t(fallbackKey, { name: name({ character, t }) }),\n        });\n      })();\n\n      return { character, text };\n    }).filter(Boolean);\n    return (\n      <Section\n        text={adventures[step][\"text\"]}\n        character={adventures[step][\"character\"]}\n        next={!!adventures[step + 1] ? stepUp : goTo(RESULTS)}\n        translated={true}\n      />\n    );\n  }\n\n  if (section === PLANNING) {\n    const completed = forestParty.every((character) =>\n      Object.values(forest).includes(character)\n    );\n\n    return (\n      <Section\n        text={\"story.forest.planning\"}\n        next={completed && goTo(EXPLORATION)}\n      >\n        <ForestSelector characters={forestParty} />\n        {completed && (\n          <Paragraph>\n            <p>{t(\"story.forest.split\")}</p>\n          </Paragraph>\n        )}\n      </Section>\n    );\n  }\n\n  const introduction = (() => {\n    let parts = [{ key: \"part-1\", character: DEJANIRE }];\n\n    if (forestParty.includes(CETO)) {\n      parts.push({ key: \"ceto\", character: CETO });\n    }\n\n    parts.push({ key: \"part-2\", character: DEJANIRE });\n\n    if (forestParty.includes(CAMILLA)) {\n      parts.push({ key: \"camilla\", character: CAMILLA });\n    }\n\n    parts.push({ key: \"part-3\", character: DEJANIRE });\n\n    if (forestParty.includes(CAROLE)) {\n      parts.push({ key: \"carole\", character: CAROLE });\n    }\n\n    return parts;\n  })();\n  const current = introduction[step];\n\n  return (\n    <Section\n      text={`story.forest.introduction.${current[\"key\"]}`}\n      character={current[\"character\"]}\n      next={!!introduction[step + 1] ? stepUp : goTo(PLANNING)}\n    />\n  );\n};\n\nexport default Forest;\n","import {\n  CAMILLA,\n  TEKELI,\n  MAHARAL,\n  CETO,\n  KATRINA,\n  ALECTO,\n} from \"../../characters\";\n\nexport const MYSTERY = \"mystery\";\nexport const FANTASY = \"fantasy\";\nexport const MIMIC = \"mimic\";\nexport const ROMANCE = \"romance\";\nexport const COFFEE = \"coffee\";\nexport const SCIENCE = \"science\";\n\nexport const BOOKS = [MYSTERY, FANTASY, MIMIC, ROMANCE, COFFEE, SCIENCE];\n\nconst SLOW = [CAMILLA, TEKELI];\n\nexport const GOOD = \"good\";\nexport const AVERAGE = \"average\";\nexport const BAD = \"bad\";\n\nconst assistSlots = (assistants) => {\n  if (assistants.length !== 2) {\n    throw new Error(\"Groups of three only please\");\n  }\n\n  if (assistants.includes(CETO)) {\n    const otherAssistant = assistants.find((character) => character !== CETO);\n\n    return {\n      [CETO]: {\n        quality: GOOD,\n        max: 3,\n      },\n      [otherAssistant]: {\n        quality: GOOD,\n        max: SLOW.includes(otherAssistant) ? 1 : 2,\n      },\n    };\n  }\n\n  return Object.fromEntries(\n    assistants.map((character) => {\n      return [\n        character,\n        {\n          quality: SLOW.includes(character) ? AVERAGE : GOOD,\n          max: 2,\n        },\n      ];\n    })\n  );\n};\n\nexport const slots = (characters) => {\n  return {\n    [MAHARAL]: {\n      quality: BAD,\n    },\n    ...assistSlots(characters.filter((character) => character !== MAHARAL)),\n  };\n};\n\nexport const score = ({ characters, assignations }) => {\n  let result = 0;\n\n  const s = slots(characters);\n  const quality = (book) => s[assignations[book]][\"quality\"];\n\n  const unusedSlots = (quality) =>\n    characters.reduce((acc, character) => {\n      if (s[character][\"quality\"] !== quality) {\n        return acc;\n      }\n      return (\n        acc +\n        Math.max(\n          0,\n          s[character][\"max\"] -\n            Object.values(assignations).filter((char) => char === character)\n              .length\n        )\n      );\n    }, 0);\n\n  const baseScore = (book, mod = 0) => {\n    switch (quality(book)) {\n      case GOOD:\n        return 2 + mod;\n      case AVERAGE:\n        return 1 + mod;\n      default:\n        return 0;\n    }\n  };\n\n  result += unusedSlots(GOOD) * 1; // Leftover bonus\n\n  result += baseScore(MYSTERY, 1);\n  result += baseScore(FANTASY);\n\n  const coffeePenalty = [ALECTO, CETO].includes(assignations[COFFEE]) ? 0 : -1;\n  result += baseScore(COFFEE, coffeePenalty);\n\n  if (assignations[MIMIC] === TEKELI) {\n    result += 1;\n  }\n\n  result += assignations[ROMANCE] === KATRINA ? 3 : baseScore(ROMANCE);\n\n  if (testimonyFound({ characters, assignations })) {\n    result += 3;\n  }\n\n  return result;\n};\n\nexport const mimicUnveiled = (assignations) =>\n  !!assignations[MIMIC] && ![MAHARAL, CAMILLA].includes(assignations[MIMIC]);\n\nexport const ghostFound = (assignations) =>\n  [KATRINA, CETO].includes(assignations[ROMANCE]);\n\nexport const quality = ({ book, characters, assignations }) =>\n  slots(characters)[assignations[book]][\"quality\"];\n\nexport const testimonyFound = ({ characters, assignations }) => {\n  if (assignations[SCIENCE] === CAMILLA) {\n    return false;\n  }\n  return quality({ book: SCIENCE, characters, assignations }) === GOOD;\n};\n\nexport const success = ({ characters, assignations }) =>\n  mimicUnveiled(assignations) && score({ characters, assignations }) >= 8;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { BOOKS } from \"./books\";\n\nconst slice = createSlice({\n  name: \"library\",\n  initialState: {},\n  reducers: {\n    assignList: (state, action) => {\n      const { character, books } = action.payload;\n      BOOKS.forEach((book) => {\n        if (state[book] === character) {\n          state[book] = null;\n        }\n      });\n      books.forEach((book) => {\n        state[book] = character;\n      });\n    },\n  },\n});\n\nexport const { assignList } = slice.actions;\nexport const selectLibrary = () => (state) => state.library;\n\nexport default slice.reducer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectLibrary, assignList } from \"./reducer\";\nimport { Card, List, Checkbox, Typography, Tooltip } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { BOOKS, slots, GOOD, BAD } from \"./books\";\nimport { name } from \"../../characters\";\nimport ColumnsList from \"../design/ColumnsList\";\n\nconst { Text, Paragraph } = Typography;\n\nconst QualityEvaluation = ({ quality, character }) => {\n  const { t } = useTranslation();\n  const text = (version) =>\n    t(`locations.library.quality.${quality}.${version}`, {\n      name: name({ t, character }),\n    });\n\n  const type =\n    quality === GOOD ? \"success\" : quality === BAD ? \"warning\" : \"average\";\n\n  return (\n    <Tooltip placement=\"top\" title={text(\"long\")}>\n      <Paragraph type={type}>{text(\"short\")}</Paragraph>\n    </Tooltip>\n  );\n};\n\nconst BookCheckList = ({ character, quality, max }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const library = useSelector(selectLibrary());\n\n  const currentlyAssigned = Object.keys(library).filter(\n    (book) => library[book] === character\n  );\n  const maxedOut = max && currentlyAssigned.length >= max;\n  const options = BOOKS.map((book) => {\n    const disabled = (() => {\n      if (library[book] === character) {\n        return false;\n      }\n      return maxedOut || library[book];\n    })();\n\n    return {\n      value: book,\n      label: t(`locations.library.books.${book}`),\n      disabled,\n    };\n  });\n  const onChange = (books) => {\n    dispatch(assignList({ character, books }));\n  };\n\n  return (\n    <Card>\n      <Text strong>{name({ t, character })}</Text>\n      {max && (\n        <Text strong={maxedOut}>{` ${currentlyAssigned.length}/${max}`}</Text>\n      )}\n      <QualityEvaluation quality={quality} character={character} />\n      <Checkbox.Group\n        options={options}\n        onChange={onChange}\n        value={currentlyAssigned}\n      />\n    </Card>\n  );\n};\n\nconst BookSelector = ({ characters }) => {\n  return (\n    <ColumnsList\n      className=\"avh-library-selector\"\n      dataSource={characters}\n      renderItem={(character) => (\n        <List.Item key={character}>\n          <BookCheckList\n            key={character}\n            character={character}\n            {...slots(characters)[character]}\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default BookSelector;\n","import {\n  RASHOMON,\n  ALECTO,\n  KATRINA,\n  CAMILLA,\n  TEKELI,\n  CAROLE,\n} from \"../../characters\";\n\nexport const POOR = \"poor\";\nexport const OLD = \"old\";\nexport const RICH = \"rich\";\nexport const SUPERMARKET = \"supermarket\";\nexport const BANK = \"bank\";\nexport const LOCATIONS = [OLD, RICH, SUPERMARKET, BANK, POOR];\nexport const SPECIAL = \"special\";\n\nexport const score = (assignations) => {\n  let result = 0;\n\n  if ([TEKELI, CAROLE].includes(assignations[POOR])) {\n    result += 1;\n  }\n\n  if ([TEKELI, ALECTO].includes(assignations[OLD])) {\n    result += 1;\n  }\n\n  if ([CAMILLA, KATRINA].includes(assignations[BANK])) {\n    result += 1;\n  }\n\n  if (assignations[SPECIAL]) {\n    result += 1;\n  }\n\n  if (Object.values(assignations).includes(ALECTO)) {\n    result += 1;\n  }\n\n  return result;\n};\n\nexport const demonFound = (assignations) =>\n  [RASHOMON, CAMILLA, KATRINA].includes(assignations[BANK]);\n\nexport const success = (assignations) => score(assignations) >= 3;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { LOCATIONS, POOR } from \"./locations\";\nimport { TEKELI } from \"../../characters\";\n\nconst slice = createSlice({\n  name: \"city\",\n  initialState: {},\n  reducers: {\n    assign: (state, action) => {\n      const { character, location } = action.payload;\n      LOCATIONS.filter(\n        (location) => character !== TEKELI || location !== POOR\n      ).forEach((location) => {\n        if (state[location] === character) {\n          state[location] = null;\n        }\n      });\n      state[location] = character;\n    },\n    forceAssign: (state, action) => {\n      const { character, location } = action.payload;\n      state[location] = character;\n    },\n  },\n});\n\nexport const { assign, forceAssign } = slice.actions;\nexport const selectCity = () => (state) => state.city;\n\nexport default slice.reducer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSection,\n  setSection,\n  selectStep,\n  nextStep,\n  setChapter,\n} from \"../navigation/reducer\";\nimport Section from \"../navigation/Section\";\nimport {\n  CETO,\n  KATRINA,\n  MAHARAL,\n  TEKELI,\n  ALECTO,\n  CAROLE,\n  CAMILLA,\n  GUEST,\n} from \"../../characters\";\nimport { selectParty } from \"../party/reducer\";\nimport BookSelector from \"./BookSelector\";\nimport { selectLibrary } from \"../library/reducer\";\nimport {\n  BOOKS,\n  slots,\n  BAD,\n  GOOD,\n  success,\n  MYSTERY,\n  mimicUnveiled,\n  MIMIC,\n  SCIENCE,\n  testimonyFound,\n  quality,\n  FANTASY,\n  ROMANCE,\n} from \"../library/books\";\nimport Results from \"../debrief/Results\";\nimport { forceAssign } from \"../city/reducer\";\nimport { SPECIAL } from \"../city/locations\";\n\nconst Library = () => {\n  const section = useSelector(selectSection);\n  const step = useSelector(selectStep);\n  const dispatch = useDispatch();\n  const goTo = (section) => () => dispatch(setSection(section));\n  const stepUp = () => dispatch(nextStep());\n  const party = useSelector(selectParty(\"library\"));\n  const library = useSelector(selectLibrary());\n\n  const PLANNING = \"planning\";\n  const READING = \"reading\";\n  const RESULTS = \"results\";\n\n  const nextChapter = () => dispatch(setChapter(\"city\"));\n\n  if (section === CAMILLA) {\n    return (\n      <Section\n        text={\"story.library.camilla\"}\n        character={CAMILLA}\n        next={goTo(RESULTS)}\n      />\n    );\n  }\n\n  if (section === RESULTS) {\n    const defaultParams = { characters: party, assignations: library };\n\n    const data = [\n      library[MYSTERY] !== BAD && {\n        key: \"dragon\",\n        character: library[MYSTERY],\n        type: \"success\",\n      },\n      mimicUnveiled(library) && {\n        key: \"mimic\",\n        character: library[MIMIC],\n        type: \"success\",\n      },\n      testimonyFound({ ...defaultParams }) && {\n        key: \"testimony\",\n        character: library[SCIENCE],\n        type: \"success\",\n      },\n      (quality({ book: FANTASY, ...defaultParams }) ||\n        quality({ book: MYSTERY, ...defaultParams })) && {\n        key: \"overkill\",\n        type: \"warning\",\n      },\n      [KATRINA, CETO].includes(library[ROMANCE]) && {\n        key: `ally.${library[ROMANCE]}`,\n      },\n      party.includes(CAMILLA) && {\n        key: \"dream\",\n      },\n    ].filter(Boolean);\n\n    return (\n      <Section next={nextChapter}>\n        <Results\n          context=\"library\"\n          success={success({ characters: party, assignations: library })}\n          data={data}\n        />\n      </Section>\n    );\n  }\n\n  if (section === READING) {\n    const qualities = slots(party);\n\n    const results = BOOKS.map((book) => {\n      const character = library[book];\n      const attentiveness = qualities[character][\"quality\"];\n\n      const key = (() => {\n        switch (book) {\n          case \"mystery\":\n            return attentiveness !== BAD && \"mystery\";\n          case \"fantasy\":\n            return `fantasy.${attentiveness === GOOD ? \"good\" : \"default\"}`;\n          case \"mimic\":\n            if (character === TEKELI) {\n              return \"mimic.tekeli\";\n            }\n            return (\n              [ALECTO, KATRINA, CETO, CAROLE].includes(character) &&\n              \"mimic.default\"\n            );\n          case \"coffee\":\n            return `coffee.${\n              [ALECTO, CETO].includes(character) ? \"good\" : \"default\"\n            }`;\n          case \"romance\":\n            return (\n              [CETO, KATRINA].includes(character) && `romance.${character}`\n            );\n          case \"science\":\n            if (character === CAMILLA) {\n              return \"science.camilla\";\n            }\n            return `science.${attentiveness === GOOD ? \"good\" : \"default\"}`;\n          default:\n            return false;\n        }\n      })();\n      return key && { text: `story.library.books.${key}`, character };\n    }).filter(Boolean);\n\n    const next = (() => {\n      if (results[step + 1]) {\n        return stepUp;\n      }\n      if (party.includes(CAMILLA)) {\n        return goTo(CAMILLA);\n      }\n      return goTo(RESULTS);\n    })();\n    return (\n      <Section\n        text={results[step][\"text\"]}\n        character={results[step][\"character\"]}\n        next={next}\n      />\n    );\n  }\n\n  if (section === PLANNING) {\n    const done = Object.values(library).filter(Boolean).length === BOOKS.length;\n    const next = () => {\n      if (library[ROMANCE] === KATRINA) {\n        dispatch(forceAssign({ character: GUEST, location: SPECIAL }));\n      }\n      goTo(READING)();\n    };\n\n    return (\n      <Section text={`story.library.planning`} next={done && next}>\n        <BookSelector characters={[...party].sort()} />\n      </Section>\n    );\n  }\n\n  const introduction = [MAHARAL, CETO, KATRINA].filter((character) =>\n    party.includes(character)\n  );\n  const character = introduction[step];\n\n  return (\n    <Section\n      text={`story.library.introduction.${character}`}\n      character={character}\n      next={!!introduction[step + 1] ? stepUp : goTo(PLANNING)}\n    />\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport { Card, Radio, List, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { LOCATIONS, POOR } from \"./locations\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectCity, assign } from \"./reducer\";\nimport { TEKELI, name } from \"../../characters\";\nimport \"./CitySelector.less\";\n\nconst { Text } = Typography;\n\nconst CityButtons = ({ character }) => {\n  const { t } = useTranslation();\n  const city = useSelector(selectCity());\n  const dispatch = useDispatch();\n\n  const places = LOCATIONS.filter(\n    (location) => character !== TEKELI || location !== POOR\n  );\n\n  return (\n    <Card>\n      <Text strong>{name({ t, character })}</Text>\n      <Radio.Group\n        onChange={(event) => {\n          dispatch(assign({ character, location: event.target.value }));\n        }}\n        value={places.find((location) => city[location] === character)}\n      >\n        {places.map((location) => {\n          const disabled = !!city[location] && city[location] !== character;\n\n          return (\n            <Radio.Button key={location} value={location} disabled={disabled}>\n              {t(`locations.city.locations.${location}`)}\n            </Radio.Button>\n          );\n        })}\n        {character === TEKELI && (\n          <Text type=\"secondary\" className=\"ant-radio-button-wrapper\">\n            + {t(`locations.city.locations.${POOR}`)}\n          </Text>\n        )}\n      </Radio.Group>\n    </Card>\n  );\n};\n\nconst CitySelector = ({ characters }) => {\n  return (\n    <List\n      className=\"avh-city-selector\"\n      dataSource={characters}\n      renderItem={(character) => (\n        <List.Item key={character}>\n          <CityButtons key={character} character={character} />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default CitySelector;\n","import React from \"react\";\nimport Section from \"../navigation/Section\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSection,\n  setSection,\n  selectStep,\n  nextStep,\n  setChapter,\n} from \"../navigation/reducer\";\nimport {\n  TEKELI,\n  ALECTO,\n  CAROLE,\n  RASHOMON,\n  CAMILLA,\n  KATRINA,\n  name,\n} from \"../../characters\";\nimport { selectCity, forceAssign } from \"./reducer\";\nimport {\n  POOR,\n  OLD,\n  SUPERMARKET,\n  BANK,\n  LOCATIONS,\n  success,\n  RICH,\n  SPECIAL,\n} from \"./locations\";\nimport { selectParty } from \"../party/reducer\";\nimport CitySelector from \"./CitySelector\";\nimport { useTranslation } from \"react-i18next\";\nimport Results from \"../debrief/Results\";\n\nconst adventure = ({ location, character, t }) => {\n  const tplus = (key) =>\n    t(`story.city.locations.${key}`, { name: name({ t, character }) });\n  const compose = (...keys) => {\n    return keys.map((key) => tplus(key)).join(\"\\n\\n\");\n  };\n\n  switch (location) {\n    case POOR:\n      if (![TEKELI, CAROLE].includes(character)) {\n        return compose(\"poor.intro\", \"poor.failure\");\n      }\n      return compose(\"poor.intro\", `poor.${character}`, \"poor.success\");\n    case OLD:\n      if (![TEKELI, ALECTO].includes(character)) {\n        return compose(\"old.intro\", \"old.failure\");\n      }\n      return compose(\"old.intro\", `old.${character}`, \"old.success\");\n    case SUPERMARKET:\n      if (character === CAROLE) {\n        return compose(\"supermarket.default\", \"supermarket.carole\");\n      }\n      return tplus(\"supermarket.default\");\n    case BANK:\n      if (character === RASHOMON) {\n        return compose(\"bank.default\", \"bank.rashomon\");\n      }\n      if ([CAMILLA, KATRINA].includes(character)) {\n        return compose(\"bank.default\", \"bank.spirit\");\n      }\n      return tplus(\"bank.default\");\n    default:\n      return tplus(location);\n  }\n};\n\nconst City = () => {\n  const section = useSelector(selectSection);\n  const dispatch = useDispatch();\n  const goTo = (section) => () => dispatch(setSection(section));\n  const party = useSelector(selectParty(\"city\"));\n  const city = useSelector(selectCity());\n  const step = useSelector(selectStep);\n  const stepUp = () => dispatch(nextStep());\n  const { t } = useTranslation();\n\n  const RESULTS = \"results\";\n  if (section === RESULTS) {\n    const noAccess =\n      (city[POOR] && ![TEKELI, CAROLE].includes(city[POOR])) ||\n      (city[OLD] && ![ALECTO, TEKELI].includes(city[OLD]));\n\n    const data = [\n      [TEKELI, CAROLE].includes(city[POOR]) && {\n        key: \"poor\",\n        character: city[POOR],\n        type: \"success\",\n      },\n      [ALECTO, TEKELI].includes(city[OLD]) && {\n        key: \"old\",\n        character: city[OLD],\n        type: \"success\",\n      },\n      party.includes(ALECTO) && {\n        key: \"alecto\",\n        type: \"success\",\n      },\n      city[SPECIAL] && {\n        key: \"spider\",\n        type: \"success\",\n      },\n      noAccess && {\n        key: \"no-access\",\n        type: \"warning\",\n      },\n      (city[RICH] || city[SUPERMARKET]) && {\n        key: \"useless\",\n        type: \"warning\",\n      },\n      [(CAMILLA, RASHOMON, KATRINA)].includes(city[BANK]) && {\n        key: \"ally\",\n        character: city[BANK],\n      },\n      party.includes(CAROLE) && {\n        key: \"dream\",\n      },\n    ].filter(Boolean);\n    return (\n      <Section next={() => dispatch(setChapter(\"finale\"))}>\n        <Results context=\"city\" success={success(city)} data={data} />\n      </Section>\n    );\n  }\n\n  const ACTION = \"action\";\n  if (section === ACTION) {\n    const parts = [\n      party.includes(CAROLE) && {\n        text: t(\"story.city.carole\"),\n        character: CAROLE,\n      },\n      ...LOCATIONS.filter((location) => !!city[location]).map((location) => {\n        const character = city[location];\n        return { text: adventure({ location, character, t }), character };\n      }),\n      party.includes(ALECTO) && {\n        text: t(\"story.city.alecto\"),\n        character: ALECTO,\n      },\n    ].filter(Boolean);\n    const { text, character } = parts[step];\n    return (\n      <Section\n        text={text}\n        character={character}\n        translated={true}\n        next={parts[step + 1] ? stepUp : goTo(RESULTS)}\n      />\n    );\n  }\n\n  const SPLIT = \"split\";\n  if (section === SPLIT) {\n    if (party.includes(TEKELI) && !city[POOR]) {\n      return <Section text={`story.city.split`} next={goTo(TEKELI)} />;\n    }\n\n    const completed = party.every((character) => {\n      const assignCount = Object.values(city).filter(\n        (chara) => chara === character\n      ).length;\n      if (character === TEKELI) {\n        return assignCount === 2;\n      }\n      return assignCount === 1;\n    });\n    const next = goTo(ACTION);\n\n    return (\n      <Section text={\"story.city.split\"} next={completed && next}>\n        <CitySelector characters={party} />\n      </Section>\n    );\n  }\n\n  if (section === TEKELI) {\n    return (\n      <Section\n        text={`story.city.tekeli`}\n        character={TEKELI}\n        next={() => {\n          dispatch(forceAssign({ character: TEKELI, location: POOR }));\n          goTo(SPLIT)();\n        }}\n      />\n    );\n  }\n\n  return (\n    <Section\n      text={`story.city.introduction`}\n      character={RASHOMON}\n      next={goTo(SPLIT)}\n    />\n  );\n};\n\nexport default City;\n","import React from \"react\";\nimport { Typography, Card, Button, Collapse } from \"antd\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Section from \"../navigation/Section\";\nimport \"./EndingSection.less\";\n\nconst { Paragraph } = Typography;\nconst { Panel } = Collapse;\n\nconst HOPE = \"hope\";\nconst RESPITE = \"respite\";\nconst BAD = \"bad\";\nconst ENDINGS = [BAD, RESPITE, HOPE];\n\nconst Hints = ({ forestSuccess, librarySuccess, citySuccess, tplus }) => {\n  return (\n    <>\n      {!forestSuccess && <Paragraph>{tplus(\"hints.forest\")}</Paragraph>}\n      {!librarySuccess && <Paragraph>{tplus(\"hints.library\")}</Paragraph>}\n      {!citySuccess && <Paragraph>{tplus(\"hints.city\")}</Paragraph>}\n    </>\n  );\n};\n\nconst EndingSection = ({\n  forestSuccess,\n  librarySuccess,\n  citySuccess,\n  entitiesFound,\n}) => {\n  const { t } = useTranslation();\n  const tplus = (key, params) => t(`extras.endings.${ending}.${key}`, params);\n\n  const success = forestSuccess && librarySuccess && citySuccess;\n  const ending = success ? (entitiesFound ? HOPE : RESPITE) : BAD;\n\n  return (\n    <Section text={`story.debrief.endings.${ending}`}>\n      <Card\n        title={t(\"extras.endings.title\", {\n          name: tplus(\"name\"),\n          index: ENDINGS.findIndex((end) => ending === end) + 1,\n          total: ENDINGS.length,\n        })}\n        className=\"avh-ending\"\n      >\n        {ending !== HOPE && (\n          <Collapse>\n            <Panel header={t(\"extras.endings.hints\")}>\n              {ending === BAD && (\n                <Hints\n                  forestSuccess={forestSuccess}\n                  librarySuccess={librarySuccess}\n                  citySuccess={citySuccess}\n                  tplus={tplus}\n                />\n              )}\n              {ending === RESPITE && <Paragraph>{tplus(\"hint\")}</Paragraph>}\n            </Panel>\n          </Collapse>\n        )}\n        {ending === HOPE && (\n          <Paragraph>\n            <Trans i18nKey={\"extras.thanks\"} />\n          </Paragraph>\n        )}\n        <Button onClick={() => window.location.reload(true)}>\n          {t(\"ui.restart\")}\n        </Button>\n      </Card>\n    </Section>\n  );\n};\n\nexport default EndingSection;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSection,\n  setSection,\n  selectStep,\n  nextStep,\n} from \"../navigation/reducer\";\nimport Section from \"../navigation/Section\";\nimport { CETO, CAROLE, CAMILLA, ALECTO } from \"../../characters\";\nimport { selectForest } from \"../forest/reducer\";\nimport { selectCity } from \"../city/reducer\";\nimport { selectLibrary } from \"../library/reducer\";\nimport {\n  WEST,\n  divineFound,\n  success as forestSuccessFunc,\n} from \"../forest/directions\";\nimport {\n  MIMIC,\n  ghostFound,\n  success as librarySuccessFunc,\n} from \"../library/books\";\nimport { demonFound, success as citySuccessFunc } from \"../city/locations\";\nimport { selectParty } from \"../party/reducer\";\nimport EndingSection from \"./EndingSection\";\n\nconst Debrief = () => {\n  const section = useSelector(selectSection);\n  const dispatch = useDispatch();\n  const goTo = (section) => () => dispatch(setSection(section));\n  const stepUp = () => dispatch(nextStep());\n  const forest = useSelector(selectForest());\n  const library = useSelector(selectLibrary());\n  const forestParty = useSelector(selectParty(\"forest\"));\n  const libraryParty = useSelector(selectParty(\"library\"));\n  const cityParty = useSelector(selectParty(\"city\"));\n  const city = useSelector(selectCity());\n  const step = useSelector(selectStep);\n\n  const forestSuccess = forestSuccessFunc(forest);\n  const librarySuccess = librarySuccessFunc({\n    characters: libraryParty,\n    assignations: library,\n  });\n  const citySuccess = citySuccessFunc(city);\n  const entitiesFound =\n    [divineFound(forest), demonFound(city), ghostFound(library)].filter(Boolean)\n      .length >= 2;\n  const tekeliSpecial =\n    [\n      forestParty.includes(CETO),\n      libraryParty.includes(CAMILLA),\n      cityParty.includes(CAROLE),\n    ].filter(Boolean).length >= 2;\n  const alectoSpecial = forest[WEST] === ALECTO || library[MIMIC] === ALECTO;\n\n  if (section === \"ending\") {\n    return (\n      <EndingSection\n        forestSuccess={forestSuccess}\n        librarySuccess={librarySuccess}\n        citySuccess={citySuccess}\n        entitiesFound={entitiesFound}\n      />\n    );\n  }\n\n  const parts = (() => {\n    const base = [alectoSpecial && \"alecto\", \"dejanire-intro\"].filter(Boolean);\n\n    if (!forestSuccess) {\n      return [...base, \"dejanire-failure\", \"werebeasts\"];\n    }\n\n    if (!librarySuccess) {\n      return [...base, \"maharal-failure\", \"book-burning\"];\n    }\n\n    if (!citySuccess) {\n      return [...base, \"maharal-success\", \"bad-reports\"];\n    }\n\n    if (tekeliSpecial) {\n      return [...base, \"maharal-success\", \"tekeli\", \"rashomon-success\"];\n    }\n\n    return [...base, \"maharal-success\", \"rashomon-success\"];\n  })();\n\n  return (\n    <Section\n      text={`story.debrief.${parts[step]}`}\n      next={parts[step + 1] ? stepUp : goTo(\"ending\")}\n    />\n  );\n};\n\nexport default Debrief;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSection,\n  setSection,\n  selectChapter,\n  setChapter,\n  setFadingOut,\n  selectInstantText,\n} from \"./features/navigation/reducer\";\nimport Section from \"./features/navigation/Section\";\nimport PartySelector from \"./features/party/PartySelector\";\nimport {\n  CETO,\n  ALECTO,\n  CAROLE,\n  KATRINA,\n  TEKELI,\n  CAMILLA,\n  RASHOMON,\n} from \"./characters\";\nimport Forest from \"./features/forest/Forest\";\nimport Library from \"./features/library/Library\";\nimport City from \"./features/city/City\";\nimport Debrief from \"./features/debrief/Debrief\";\n\nconst Game = () => {\n  const section = useSelector(selectSection);\n  const dispatch = useDispatch();\n  const goTo = (section) => () => dispatch(setSection(section));\n  const chapter = useSelector(selectChapter);\n  const instantText = useSelector(selectInstantText);\n\n  if (chapter === \"finale\") {\n    return <Debrief />;\n  }\n\n  if (chapter === \"city\") {\n    return <City />;\n  }\n\n  if (chapter === \"forest\") {\n    return <Forest />;\n  }\n\n  if (chapter === \"library\") {\n    return <Library />;\n  }\n\n  const meetingOrder = [CETO, ALECTO, CAROLE, KATRINA, TEKELI, CAMILLA];\n  const i = meetingOrder.indexOf(section);\n  if (i > -1) {\n    const next = goTo(meetingOrder[i + 1] || RASHOMON);\n\n    return (\n      <Section\n        text={`story.meeting.${section}`}\n        character={meetingOrder[i]}\n        next={next}\n        hideLastButton={true}\n      >\n        <PartySelector\n          character={section}\n          next={instantText ? next : () => dispatch(setFadingOut(true))}\n        />\n      </Section>\n    );\n  }\n\n  switch (section) {\n    case RASHOMON:\n      return (\n        <Section\n          text={\"story.meeting.rashomon\"}\n          next={() => dispatch(setChapter(\"forest\"))}\n          character={RASHOMON}\n        />\n      );\n    default:\n      return (\n        <Section\n          text={\"story.meeting.introduction\"}\n          next={goTo(CETO)}\n          character={RASHOMON}\n        />\n      );\n  }\n};\n\nexport default Game;\n","import React from \"react\";\nimport \"./App.less\";\nimport { useTranslation } from \"react-i18next\";\nimport { Radio, Switch } from \"antd\";\nimport \"./transitions.less\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectInstantText,\n  toggleInstantText,\n} from \"./features/navigation/reducer\";\n\nconst supportedLanguages = [\"en\", \"fr\"];\n\nconst LanguageSelector = () => {\n  const { i18n } = useTranslation();\n\n  return (\n    <Radio.Group\n      onChange={(event) => i18n.changeLanguage(event.target.value)}\n      defaultValue={i18n.language}\n    >\n      {supportedLanguages.map((language) => {\n        return (\n          <Radio.Button key={language} value={language}>\n            {language.toUpperCase()}\n          </Radio.Button>\n        );\n      })}\n    </Radio.Group>\n  );\n};\n\nconst InstantTextToggler = () => {\n  const { t } = useTranslation();\n  const instantText = useSelector(selectInstantText);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"instant-text-toggler\">\n      <Switch\n        checked={!instantText}\n        onClick={() => dispatch(toggleInstantText())}\n        unCheckedChildren={t(\"ui.instant-text-on\")}\n        checkedChildren={t(\"ui.instant-text-off\")}\n      />\n    </div>\n  );\n};\n\nconst Settings = () => {\n  return (\n    <>\n      <InstantTextToggler />\n      <LanguageSelector />\n    </>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport { Modal, Button, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Title, Paragraph } = Typography;\n\nconst About = () => {\n  const [visible, setVisible] = useState(false);\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Button shape=\"circle\" size=\"small\" onClick={() => setVisible(true)}>\n        ?\n      </Button>\n      <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\n        <Title level={2}>{t(\"ui.title\")}</Title>\n        {Object.values(t(\"extras.credits\", { returnObjects: true })).map(\n          (text, index) => {\n            return <Paragraph key={index.toString()}>{text}</Paragraph>;\n          }\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default About;\n","import React, { useEffect } from \"react\";\nimport \"./App.less\";\nimport Game from \"./Game\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./transitions.less\";\nimport Settings from \"./Settings\";\nimport About from \"./About\";\n\nconst App = () => {\n  const { t } = useTranslation();\n  useEffect(() => {\n    document.title = t(\"ui.title\");\n  }, [t]);\n\n  return (\n    <>\n      <header>\n        <Settings />\n        <About />\n      </header>\n      <main>\n        <Game />\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport navigationReducer from \"../features/navigation/reducer\";\nimport partyReducer from \"../features/party/reducer\";\nimport forestReducer from \"../features/forest/reducer\";\nimport libraryReducer from \"../features/library/reducer\";\nimport cityReducer from \"../features/city/reducer\";\n\nexport default configureStore({\n  reducer: {\n    navigation: navigationReducer,\n    party: partyReducer,\n    forest: forestReducer,\n    library: libraryReducer,\n    city: cityReducer,\n  },\n});\n","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport en from \"./i18n/en.json\";\nimport fr from \"./i18n/fr.json\";\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    ns: [\"all\"],\n    defaultNS: \"all\",\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n    resources: { en: { all: en }, fr: { all: fr } },\n    react: {\n      transKeepBasicHtmlNodesFor: [\"br\", \"p\", \"strong\", \"em\"],\n    },\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport \"./i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}